

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Nov 07 15:03:28 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1717
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  008F                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  0110                     	;# 
    79  0111                     	;# 
    80  0112                     	;# 
    81  0113                     	;# 
    82  0114                     	;# 
    83  0115                     	;# 
    84  0116                     	;# 
    85  0117                     	;# 
    86  0118                     	;# 
    87  0119                     	;# 
    88  011A                     	;# 
    89  011B                     	;# 
    90  011B                     	;# 
    91  011C                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  018F                     	;# 
    96  0190                     	;# 
    97  0191                     	;# 
    98  0191                     	;# 
    99  0192                     	;# 
   100  0193                     	;# 
   101  0193                     	;# 
   102  0194                     	;# 
   103  0195                     	;# 
   104  0196                     	;# 
   105  0197                     	;# 
   106  0199                     	;# 
   107  0199                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019A                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019D                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019E                     	;# 
   125  019E                     	;# 
   126  019F                     	;# 
   127  019F                     	;# 
   128  019F                     	;# 
   129  019F                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  020D                     	;# 
   133  020E                     	;# 
   134  020F                     	;# 
   135  0210                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  028C                     	;# 
   153  028D                     	;# 
   154  028E                     	;# 
   155  028F                     	;# 
   156  0290                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0293                     	;# 
   162  0298                     	;# 
   163  0298                     	;# 
   164  0299                     	;# 
   165  029A                     	;# 
   166  029A                     	;# 
   167  029E                     	;# 
   168  030C                     	;# 
   169  030D                     	;# 
   170  030E                     	;# 
   171  030F                     	;# 
   172  0310                     	;# 
   173  038C                     	;# 
   174  038D                     	;# 
   175  038E                     	;# 
   176  038F                     	;# 
   177  0390                     	;# 
   178  0391                     	;# 
   179  0392                     	;# 
   180  0393                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0397                     	;# 
   185  0398                     	;# 
   186  0399                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0415                     	;# 
   191  0416                     	;# 
   192  0417                     	;# 
   193  041C                     	;# 
   194  041D                     	;# 
   195  041E                     	;# 
   196  0498                     	;# 
   197  0498                     	;# 
   198  0499                     	;# 
   199  049A                     	;# 
   200  049B                     	;# 
   201  049B                     	;# 
   202  049C                     	;# 
   203  049D                     	;# 
   204  049E                     	;# 
   205  049F                     	;# 
   206  0511                     	;# 
   207  0515                     	;# 
   208  0617                     	;# 
   209  0618                     	;# 
   210  0619                     	;# 
   211  0619                     	;# 
   212  061A                     	;# 
   213  061B                     	;# 
   214  061C                     	;# 
   215  061C                     	;# 
   216  0691                     	;# 
   217  0692                     	;# 
   218  0693                     	;# 
   219  0694                     	;# 
   220  0695                     	;# 
   221  0696                     	;# 
   222  0697                     	;# 
   223  0698                     	;# 
   224  0699                     	;# 
   225  069A                     	;# 
   226  069B                     	;# 
   227  069C                     	;# 
   228  069D                     	;# 
   229  069E                     	;# 
   230  069F                     	;# 
   231  0E0F                     	;# 
   232  0E10                     	;# 
   233  0E11                     	;# 
   234  0E12                     	;# 
   235  0E13                     	;# 
   236  0E14                     	;# 
   237  0E15                     	;# 
   238  0E17                     	;# 
   239  0E20                     	;# 
   240  0E21                     	;# 
   241  0E22                     	;# 
   242  0E24                     	;# 
   243  0E25                     	;# 
   244  0E28                     	;# 
   245  0E29                     	;# 
   246  0E2A                     	;# 
   247  0E2B                     	;# 
   248  0E90                     	;# 
   249  0E91                     	;# 
   250  0E92                     	;# 
   251  0E93                     	;# 
   252  0E94                     	;# 
   253  0E95                     	;# 
   254  0E96                     	;# 
   255  0E97                     	;# 
   256  0E98                     	;# 
   257  0E99                     	;# 
   258  0E9A                     	;# 
   259  0E9B                     	;# 
   260  0E9C                     	;# 
   261  0E9D                     	;# 
   262  0E9E                     	;# 
   263  0E9F                     	;# 
   264  0EA0                     	;# 
   265  0EA1                     	;# 
   266  0EA2                     	;# 
   267  0EA3                     	;# 
   268  0EA4                     	;# 
   269  0EA5                     	;# 
   270  0EA6                     	;# 
   271  0EA7                     	;# 
   272  0EA8                     	;# 
   273  0EA9                     	;# 
   274  0EAA                     	;# 
   275  0EAB                     	;# 
   276  0EAC                     	;# 
   277  0EAD                     	;# 
   278  0EAE                     	;# 
   279  0EAF                     	;# 
   280  0EB0                     	;# 
   281  0EB1                     	;# 
   282  0EB2                     	;# 
   283  0F0F                     	;# 
   284  0F10                     	;# 
   285  0F11                     	;# 
   286  0F12                     	;# 
   287  0F13                     	;# 
   288  0F14                     	;# 
   289  0F15                     	;# 
   290  0F16                     	;# 
   291  0F17                     	;# 
   292  0F18                     	;# 
   293  0F19                     	;# 
   294  0F1A                     	;# 
   295  0F1B                     	;# 
   296  0F1C                     	;# 
   297  0F1D                     	;# 
   298  0F1E                     	;# 
   299  0F1F                     	;# 
   300  0F20                     	;# 
   301  0F21                     	;# 
   302  0F22                     	;# 
   303  0F23                     	;# 
   304  0F24                     	;# 
   305  0F25                     	;# 
   306  0F26                     	;# 
   307  0F27                     	;# 
   308  0F28                     	;# 
   309  0F29                     	;# 
   310  0F2A                     	;# 
   311  0F2B                     	;# 
   312  0F2C                     	;# 
   313  0F2D                     	;# 
   314  0F2E                     	;# 
   315  0F2F                     	;# 
   316  0F30                     	;# 
   317  0F31                     	;# 
   318  0F32                     	;# 
   319  0F33                     	;# 
   320  0F34                     	;# 
   321  0F35                     	;# 
   322  0F36                     	;# 
   323  0F37                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  000E                     	;# 
   350  000F                     	;# 
   351  0010                     	;# 
   352  0011                     	;# 
   353  0012                     	;# 
   354  0013                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0110                     	;# 
   389  0111                     	;# 
   390  0112                     	;# 
   391  0113                     	;# 
   392  0114                     	;# 
   393  0115                     	;# 
   394  0116                     	;# 
   395  0117                     	;# 
   396  0118                     	;# 
   397  0119                     	;# 
   398  011A                     	;# 
   399  011B                     	;# 
   400  011B                     	;# 
   401  011C                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  018E                     	;# 
   405  018F                     	;# 
   406  0190                     	;# 
   407  0191                     	;# 
   408  0191                     	;# 
   409  0192                     	;# 
   410  0193                     	;# 
   411  0193                     	;# 
   412  0194                     	;# 
   413  0195                     	;# 
   414  0196                     	;# 
   415  0197                     	;# 
   416  0199                     	;# 
   417  0199                     	;# 
   418  0199                     	;# 
   419  019A                     	;# 
   420  019A                     	;# 
   421  019A                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019C                     	;# 
   428  019C                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019D                     	;# 
   432  019D                     	;# 
   433  019E                     	;# 
   434  019E                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  019F                     	;# 
   438  019F                     	;# 
   439  019F                     	;# 
   440  019F                     	;# 
   441  020C                     	;# 
   442  020D                     	;# 
   443  020E                     	;# 
   444  020F                     	;# 
   445  0210                     	;# 
   446  0211                     	;# 
   447  0211                     	;# 
   448  0212                     	;# 
   449  0212                     	;# 
   450  0213                     	;# 
   451  0213                     	;# 
   452  0214                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0216                     	;# 
   459  0216                     	;# 
   460  0217                     	;# 
   461  0217                     	;# 
   462  028C                     	;# 
   463  028D                     	;# 
   464  028E                     	;# 
   465  028F                     	;# 
   466  0290                     	;# 
   467  0291                     	;# 
   468  0291                     	;# 
   469  0292                     	;# 
   470  0293                     	;# 
   471  0293                     	;# 
   472  0298                     	;# 
   473  0298                     	;# 
   474  0299                     	;# 
   475  029A                     	;# 
   476  029A                     	;# 
   477  029E                     	;# 
   478  030C                     	;# 
   479  030D                     	;# 
   480  030E                     	;# 
   481  030F                     	;# 
   482  0310                     	;# 
   483  038C                     	;# 
   484  038D                     	;# 
   485  038E                     	;# 
   486  038F                     	;# 
   487  0390                     	;# 
   488  0391                     	;# 
   489  0392                     	;# 
   490  0393                     	;# 
   491  0394                     	;# 
   492  0395                     	;# 
   493  0396                     	;# 
   494  0397                     	;# 
   495  0398                     	;# 
   496  0399                     	;# 
   497  039D                     	;# 
   498  039E                     	;# 
   499  039F                     	;# 
   500  0415                     	;# 
   501  0416                     	;# 
   502  0417                     	;# 
   503  041C                     	;# 
   504  041D                     	;# 
   505  041E                     	;# 
   506  0498                     	;# 
   507  0498                     	;# 
   508  0499                     	;# 
   509  049A                     	;# 
   510  049B                     	;# 
   511  049B                     	;# 
   512  049C                     	;# 
   513  049D                     	;# 
   514  049E                     	;# 
   515  049F                     	;# 
   516  0511                     	;# 
   517  0515                     	;# 
   518  0617                     	;# 
   519  0618                     	;# 
   520  0619                     	;# 
   521  0619                     	;# 
   522  061A                     	;# 
   523  061B                     	;# 
   524  061C                     	;# 
   525  061C                     	;# 
   526  0691                     	;# 
   527  0692                     	;# 
   528  0693                     	;# 
   529  0694                     	;# 
   530  0695                     	;# 
   531  0696                     	;# 
   532  0697                     	;# 
   533  0698                     	;# 
   534  0699                     	;# 
   535  069A                     	;# 
   536  069B                     	;# 
   537  069C                     	;# 
   538  069D                     	;# 
   539  069E                     	;# 
   540  069F                     	;# 
   541  0E0F                     	;# 
   542  0E10                     	;# 
   543  0E11                     	;# 
   544  0E12                     	;# 
   545  0E13                     	;# 
   546  0E14                     	;# 
   547  0E15                     	;# 
   548  0E17                     	;# 
   549  0E20                     	;# 
   550  0E21                     	;# 
   551  0E22                     	;# 
   552  0E24                     	;# 
   553  0E25                     	;# 
   554  0E28                     	;# 
   555  0E29                     	;# 
   556  0E2A                     	;# 
   557  0E2B                     	;# 
   558  0E90                     	;# 
   559  0E91                     	;# 
   560  0E92                     	;# 
   561  0E93                     	;# 
   562  0E94                     	;# 
   563  0E95                     	;# 
   564  0E96                     	;# 
   565  0E97                     	;# 
   566  0E98                     	;# 
   567  0E99                     	;# 
   568  0E9A                     	;# 
   569  0E9B                     	;# 
   570  0E9C                     	;# 
   571  0E9D                     	;# 
   572  0E9E                     	;# 
   573  0E9F                     	;# 
   574  0EA0                     	;# 
   575  0EA1                     	;# 
   576  0EA2                     	;# 
   577  0EA3                     	;# 
   578  0EA4                     	;# 
   579  0EA5                     	;# 
   580  0EA6                     	;# 
   581  0EA7                     	;# 
   582  0EA8                     	;# 
   583  0EA9                     	;# 
   584  0EAA                     	;# 
   585  0EAB                     	;# 
   586  0EAC                     	;# 
   587  0EAD                     	;# 
   588  0EAE                     	;# 
   589  0EAF                     	;# 
   590  0EB0                     	;# 
   591  0EB1                     	;# 
   592  0EB2                     	;# 
   593  0F0F                     	;# 
   594  0F10                     	;# 
   595  0F11                     	;# 
   596  0F12                     	;# 
   597  0F13                     	;# 
   598  0F14                     	;# 
   599  0F15                     	;# 
   600  0F16                     	;# 
   601  0F17                     	;# 
   602  0F18                     	;# 
   603  0F19                     	;# 
   604  0F1A                     	;# 
   605  0F1B                     	;# 
   606  0F1C                     	;# 
   607  0F1D                     	;# 
   608  0F1E                     	;# 
   609  0F1F                     	;# 
   610  0F20                     	;# 
   611  0F21                     	;# 
   612  0F22                     	;# 
   613  0F23                     	;# 
   614  0F24                     	;# 
   615  0F25                     	;# 
   616  0F26                     	;# 
   617  0F27                     	;# 
   618  0F28                     	;# 
   619  0F29                     	;# 
   620  0F2A                     	;# 
   621  0F2B                     	;# 
   622  0F2C                     	;# 
   623  0F2D                     	;# 
   624  0F2E                     	;# 
   625  0F2F                     	;# 
   626  0F30                     	;# 
   627  0F31                     	;# 
   628  0F32                     	;# 
   629  0F33                     	;# 
   630  0F34                     	;# 
   631  0F35                     	;# 
   632  0F36                     	;# 
   633  0F37                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  000F                     	;# 
   661  0010                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0013                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008F                     	;# 
   678  0090                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0093                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010E                     	;# 
   697  010F                     	;# 
   698  0110                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011C                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714  018E                     	;# 
   715  018F                     	;# 
   716  0190                     	;# 
   717  0191                     	;# 
   718  0191                     	;# 
   719  0192                     	;# 
   720  0193                     	;# 
   721  0193                     	;# 
   722  0194                     	;# 
   723  0195                     	;# 
   724  0196                     	;# 
   725  0197                     	;# 
   726  0199                     	;# 
   727  0199                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019A                     	;# 
   731  019A                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019B                     	;# 
   736  019B                     	;# 
   737  019C                     	;# 
   738  019C                     	;# 
   739  019C                     	;# 
   740  019D                     	;# 
   741  019D                     	;# 
   742  019D                     	;# 
   743  019E                     	;# 
   744  019E                     	;# 
   745  019E                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  019F                     	;# 
   750  019F                     	;# 
   751  020C                     	;# 
   752  020D                     	;# 
   753  020E                     	;# 
   754  020F                     	;# 
   755  0210                     	;# 
   756  0211                     	;# 
   757  0211                     	;# 
   758  0212                     	;# 
   759  0212                     	;# 
   760  0213                     	;# 
   761  0213                     	;# 
   762  0214                     	;# 
   763  0214                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0215                     	;# 
   767  0215                     	;# 
   768  0216                     	;# 
   769  0216                     	;# 
   770  0217                     	;# 
   771  0217                     	;# 
   772  028C                     	;# 
   773  028D                     	;# 
   774  028E                     	;# 
   775  028F                     	;# 
   776  0290                     	;# 
   777  0291                     	;# 
   778  0291                     	;# 
   779  0292                     	;# 
   780  0293                     	;# 
   781  0293                     	;# 
   782  0298                     	;# 
   783  0298                     	;# 
   784  0299                     	;# 
   785  029A                     	;# 
   786  029A                     	;# 
   787  029E                     	;# 
   788  030C                     	;# 
   789  030D                     	;# 
   790  030E                     	;# 
   791  030F                     	;# 
   792  0310                     	;# 
   793  038C                     	;# 
   794  038D                     	;# 
   795  038E                     	;# 
   796  038F                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  0393                     	;# 
   801  0394                     	;# 
   802  0395                     	;# 
   803  0396                     	;# 
   804  0397                     	;# 
   805  0398                     	;# 
   806  0399                     	;# 
   807  039D                     	;# 
   808  039E                     	;# 
   809  039F                     	;# 
   810  0415                     	;# 
   811  0416                     	;# 
   812  0417                     	;# 
   813  041C                     	;# 
   814  041D                     	;# 
   815  041E                     	;# 
   816  0498                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049B                     	;# 
   822  049C                     	;# 
   823  049D                     	;# 
   824  049E                     	;# 
   825  049F                     	;# 
   826  0511                     	;# 
   827  0515                     	;# 
   828  0617                     	;# 
   829  0618                     	;# 
   830  0619                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061C                     	;# 
   836  0691                     	;# 
   837  0692                     	;# 
   838  0693                     	;# 
   839  0694                     	;# 
   840  0695                     	;# 
   841  0696                     	;# 
   842  0697                     	;# 
   843  0698                     	;# 
   844  0699                     	;# 
   845  069A                     	;# 
   846  069B                     	;# 
   847  069C                     	;# 
   848  069D                     	;# 
   849  069E                     	;# 
   850  069F                     	;# 
   851  0E0F                     	;# 
   852  0E10                     	;# 
   853  0E11                     	;# 
   854  0E12                     	;# 
   855  0E13                     	;# 
   856  0E14                     	;# 
   857  0E15                     	;# 
   858  0E17                     	;# 
   859  0E20                     	;# 
   860  0E21                     	;# 
   861  0E22                     	;# 
   862  0E24                     	;# 
   863  0E25                     	;# 
   864  0E28                     	;# 
   865  0E29                     	;# 
   866  0E2A                     	;# 
   867  0E2B                     	;# 
   868  0E90                     	;# 
   869  0E91                     	;# 
   870  0E92                     	;# 
   871  0E93                     	;# 
   872  0E94                     	;# 
   873  0E95                     	;# 
   874  0E96                     	;# 
   875  0E97                     	;# 
   876  0E98                     	;# 
   877  0E99                     	;# 
   878  0E9A                     	;# 
   879  0E9B                     	;# 
   880  0E9C                     	;# 
   881  0E9D                     	;# 
   882  0E9E                     	;# 
   883  0E9F                     	;# 
   884  0EA0                     	;# 
   885  0EA1                     	;# 
   886  0EA2                     	;# 
   887  0EA3                     	;# 
   888  0EA4                     	;# 
   889  0EA5                     	;# 
   890  0EA6                     	;# 
   891  0EA7                     	;# 
   892  0EA8                     	;# 
   893  0EA9                     	;# 
   894  0EAA                     	;# 
   895  0EAB                     	;# 
   896  0EAC                     	;# 
   897  0EAD                     	;# 
   898  0EAE                     	;# 
   899  0EAF                     	;# 
   900  0EB0                     	;# 
   901  0EB1                     	;# 
   902  0EB2                     	;# 
   903  0F0F                     	;# 
   904  0F10                     	;# 
   905  0F11                     	;# 
   906  0F12                     	;# 
   907  0F13                     	;# 
   908  0F14                     	;# 
   909  0F15                     	;# 
   910  0F16                     	;# 
   911  0F17                     	;# 
   912  0F18                     	;# 
   913  0F19                     	;# 
   914  0F1A                     	;# 
   915  0F1B                     	;# 
   916  0F1C                     	;# 
   917  0F1D                     	;# 
   918  0F1E                     	;# 
   919  0F1F                     	;# 
   920  0F20                     	;# 
   921  0F21                     	;# 
   922  0F22                     	;# 
   923  0F23                     	;# 
   924  0F24                     	;# 
   925  0F25                     	;# 
   926  0F26                     	;# 
   927  0F27                     	;# 
   928  0F28                     	;# 
   929  0F29                     	;# 
   930  0F2A                     	;# 
   931  0F2B                     	;# 
   932  0F2C                     	;# 
   933  0F2D                     	;# 
   934  0F2E                     	;# 
   935  0F2F                     	;# 
   936  0F30                     	;# 
   937  0F31                     	;# 
   938  0F32                     	;# 
   939  0F33                     	;# 
   940  0F34                     	;# 
   941  0F35                     	;# 
   942  0F36                     	;# 
   943  0F37                     	;# 
   944  0FE4                     	;# 
   945  0FE5                     	;# 
   946  0FE6                     	;# 
   947  0FE7                     	;# 
   948  0FE8                     	;# 
   949  0FE9                     	;# 
   950  0FEA                     	;# 
   951  0FEB                     	;# 
   952  0FED                     	;# 
   953  0FEE                     	;# 
   954  0FEF                     	;# 
   955  0000                     	;# 
   956  0001                     	;# 
   957  0002                     	;# 
   958  0003                     	;# 
   959  0004                     	;# 
   960  0005                     	;# 
   961  0006                     	;# 
   962  0007                     	;# 
   963  0008                     	;# 
   964  0009                     	;# 
   965  000A                     	;# 
   966  000B                     	;# 
   967  000C                     	;# 
   968  000D                     	;# 
   969  000E                     	;# 
   970  000F                     	;# 
   971  0010                     	;# 
   972  0011                     	;# 
   973  0012                     	;# 
   974  0013                     	;# 
   975  0015                     	;# 
   976  0016                     	;# 
   977  0016                     	;# 
   978  0017                     	;# 
   979  0018                     	;# 
   980  0019                     	;# 
   981  001A                     	;# 
   982  001B                     	;# 
   983  001C                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  008F                     	;# 
   988  0090                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0093                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0097                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009A                     	;# 
   998  009B                     	;# 
   999  009B                     	;# 
  1000  009C                     	;# 
  1001  009D                     	;# 
  1002  009E                     	;# 
  1003  009F                     	;# 
  1004  010C                     	;# 
  1005  010D                     	;# 
  1006  010E                     	;# 
  1007  010F                     	;# 
  1008  0110                     	;# 
  1009  0111                     	;# 
  1010  0112                     	;# 
  1011  0113                     	;# 
  1012  0114                     	;# 
  1013  0115                     	;# 
  1014  0116                     	;# 
  1015  0117                     	;# 
  1016  0118                     	;# 
  1017  0119                     	;# 
  1018  011A                     	;# 
  1019  011B                     	;# 
  1020  011B                     	;# 
  1021  011C                     	;# 
  1022  018C                     	;# 
  1023  018D                     	;# 
  1024  018E                     	;# 
  1025  018F                     	;# 
  1026  0190                     	;# 
  1027  0191                     	;# 
  1028  0191                     	;# 
  1029  0192                     	;# 
  1030  0193                     	;# 
  1031  0193                     	;# 
  1032  0194                     	;# 
  1033  0195                     	;# 
  1034  0196                     	;# 
  1035  0197                     	;# 
  1036  0199                     	;# 
  1037  0199                     	;# 
  1038  0199                     	;# 
  1039  019A                     	;# 
  1040  019A                     	;# 
  1041  019A                     	;# 
  1042  019B                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019C                     	;# 
  1048  019C                     	;# 
  1049  019C                     	;# 
  1050  019D                     	;# 
  1051  019D                     	;# 
  1052  019D                     	;# 
  1053  019E                     	;# 
  1054  019E                     	;# 
  1055  019E                     	;# 
  1056  019F                     	;# 
  1057  019F                     	;# 
  1058  019F                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  020C                     	;# 
  1062  020D                     	;# 
  1063  020E                     	;# 
  1064  020F                     	;# 
  1065  0210                     	;# 
  1066  0211                     	;# 
  1067  0211                     	;# 
  1068  0212                     	;# 
  1069  0212                     	;# 
  1070  0213                     	;# 
  1071  0213                     	;# 
  1072  0214                     	;# 
  1073  0214                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0216                     	;# 
  1079  0216                     	;# 
  1080  0217                     	;# 
  1081  0217                     	;# 
  1082  028C                     	;# 
  1083  028D                     	;# 
  1084  028E                     	;# 
  1085  028F                     	;# 
  1086  0290                     	;# 
  1087  0291                     	;# 
  1088  0291                     	;# 
  1089  0292                     	;# 
  1090  0293                     	;# 
  1091  0293                     	;# 
  1092  0298                     	;# 
  1093  0298                     	;# 
  1094  0299                     	;# 
  1095  029A                     	;# 
  1096  029A                     	;# 
  1097  029E                     	;# 
  1098  030C                     	;# 
  1099  030D                     	;# 
  1100  030E                     	;# 
  1101  030F                     	;# 
  1102  0310                     	;# 
  1103  038C                     	;# 
  1104  038D                     	;# 
  1105  038E                     	;# 
  1106  038F                     	;# 
  1107  0390                     	;# 
  1108  0391                     	;# 
  1109  0392                     	;# 
  1110  0393                     	;# 
  1111  0394                     	;# 
  1112  0395                     	;# 
  1113  0396                     	;# 
  1114  0397                     	;# 
  1115  0398                     	;# 
  1116  0399                     	;# 
  1117  039D                     	;# 
  1118  039E                     	;# 
  1119  039F                     	;# 
  1120  0415                     	;# 
  1121  0416                     	;# 
  1122  0417                     	;# 
  1123  041C                     	;# 
  1124  041D                     	;# 
  1125  041E                     	;# 
  1126  0498                     	;# 
  1127  0498                     	;# 
  1128  0499                     	;# 
  1129  049A                     	;# 
  1130  049B                     	;# 
  1131  049B                     	;# 
  1132  049C                     	;# 
  1133  049D                     	;# 
  1134  049E                     	;# 
  1135  049F                     	;# 
  1136  0511                     	;# 
  1137  0515                     	;# 
  1138  0617                     	;# 
  1139  0618                     	;# 
  1140  0619                     	;# 
  1141  0619                     	;# 
  1142  061A                     	;# 
  1143  061B                     	;# 
  1144  061C                     	;# 
  1145  061C                     	;# 
  1146  0691                     	;# 
  1147  0692                     	;# 
  1148  0693                     	;# 
  1149  0694                     	;# 
  1150  0695                     	;# 
  1151  0696                     	;# 
  1152  0697                     	;# 
  1153  0698                     	;# 
  1154  0699                     	;# 
  1155  069A                     	;# 
  1156  069B                     	;# 
  1157  069C                     	;# 
  1158  069D                     	;# 
  1159  069E                     	;# 
  1160  069F                     	;# 
  1161  0E0F                     	;# 
  1162  0E10                     	;# 
  1163  0E11                     	;# 
  1164  0E12                     	;# 
  1165  0E13                     	;# 
  1166  0E14                     	;# 
  1167  0E15                     	;# 
  1168  0E17                     	;# 
  1169  0E20                     	;# 
  1170  0E21                     	;# 
  1171  0E22                     	;# 
  1172  0E24                     	;# 
  1173  0E25                     	;# 
  1174  0E28                     	;# 
  1175  0E29                     	;# 
  1176  0E2A                     	;# 
  1177  0E2B                     	;# 
  1178  0E90                     	;# 
  1179  0E91                     	;# 
  1180  0E92                     	;# 
  1181  0E93                     	;# 
  1182  0E94                     	;# 
  1183  0E95                     	;# 
  1184  0E96                     	;# 
  1185  0E97                     	;# 
  1186  0E98                     	;# 
  1187  0E99                     	;# 
  1188  0E9A                     	;# 
  1189  0E9B                     	;# 
  1190  0E9C                     	;# 
  1191  0E9D                     	;# 
  1192  0E9E                     	;# 
  1193  0E9F                     	;# 
  1194  0EA0                     	;# 
  1195  0EA1                     	;# 
  1196  0EA2                     	;# 
  1197  0EA3                     	;# 
  1198  0EA4                     	;# 
  1199  0EA5                     	;# 
  1200  0EA6                     	;# 
  1201  0EA7                     	;# 
  1202  0EA8                     	;# 
  1203  0EA9                     	;# 
  1204  0EAA                     	;# 
  1205  0EAB                     	;# 
  1206  0EAC                     	;# 
  1207  0EAD                     	;# 
  1208  0EAE                     	;# 
  1209  0EAF                     	;# 
  1210  0EB0                     	;# 
  1211  0EB1                     	;# 
  1212  0EB2                     	;# 
  1213  0F0F                     	;# 
  1214  0F10                     	;# 
  1215  0F11                     	;# 
  1216  0F12                     	;# 
  1217  0F13                     	;# 
  1218  0F14                     	;# 
  1219  0F15                     	;# 
  1220  0F16                     	;# 
  1221  0F17                     	;# 
  1222  0F18                     	;# 
  1223  0F19                     	;# 
  1224  0F1A                     	;# 
  1225  0F1B                     	;# 
  1226  0F1C                     	;# 
  1227  0F1D                     	;# 
  1228  0F1E                     	;# 
  1229  0F1F                     	;# 
  1230  0F20                     	;# 
  1231  0F21                     	;# 
  1232  0F22                     	;# 
  1233  0F23                     	;# 
  1234  0F24                     	;# 
  1235  0F25                     	;# 
  1236  0F26                     	;# 
  1237  0F27                     	;# 
  1238  0F28                     	;# 
  1239  0F29                     	;# 
  1240  0F2A                     	;# 
  1241  0F2B                     	;# 
  1242  0F2C                     	;# 
  1243  0F2D                     	;# 
  1244  0F2E                     	;# 
  1245  0F2F                     	;# 
  1246  0F30                     	;# 
  1247  0F31                     	;# 
  1248  0F32                     	;# 
  1249  0F33                     	;# 
  1250  0F34                     	;# 
  1251  0F35                     	;# 
  1252  0F36                     	;# 
  1253  0F37                     	;# 
  1254  0FE4                     	;# 
  1255  0FE5                     	;# 
  1256  0FE6                     	;# 
  1257  0FE7                     	;# 
  1258  0FE8                     	;# 
  1259  0FE9                     	;# 
  1260  0FEA                     	;# 
  1261  0FEB                     	;# 
  1262  0FED                     	;# 
  1263  0FEE                     	;# 
  1264  0FEF                     	;# 
  1265                           
  1266                           	psect	stringtext
  1267  0800                     __pstringtext:	
  1268  0800                     _dpowers:	
  1269  0800  3401               	retlw	1
  1270  0801  3400               	retlw	0
  1271  0802  3400               	retlw	0
  1272  0803  3400               	retlw	0
  1273  0804  340A               	retlw	10
  1274  0805  3400               	retlw	0
  1275  0806  3400               	retlw	0
  1276  0807  3400               	retlw	0
  1277  0808  3464               	retlw	100
  1278  0809  3400               	retlw	0
  1279  080A  3400               	retlw	0
  1280  080B  3400               	retlw	0
  1281  080C  34E8               	retlw	232
  1282  080D  3403               	retlw	3
  1283  080E  3400               	retlw	0
  1284  080F  3400               	retlw	0
  1285  0810  3410               	retlw	16
  1286  0811  3427               	retlw	39
  1287  0812  3400               	retlw	0
  1288  0813  3400               	retlw	0
  1289  0814  34A0               	retlw	160
  1290  0815  3486               	retlw	134
  1291  0816  3401               	retlw	1
  1292  0817  3400               	retlw	0
  1293  0818  3440               	retlw	64
  1294  0819  3442               	retlw	66
  1295  081A  340F               	retlw	15
  1296  081B  3400               	retlw	0
  1297  081C  3480               	retlw	128
  1298  081D  3496               	retlw	150
  1299  081E  3498               	retlw	152
  1300  081F  3400               	retlw	0
  1301  0820  3400               	retlw	0
  1302  0821  34E1               	retlw	225
  1303  0822  34F5               	retlw	245
  1304  0823  3405               	retlw	5
  1305  0824  3400               	retlw	0
  1306  0825  34CA               	retlw	202
  1307  0826  349A               	retlw	154
  1308  0827  343B               	retlw	59
  1309  0828                     __end_of_dpowers:	
  1310  0011                     _PIR1bits	set	17
  1311  007A                     _RD2	set	122
  1312  007B                     _RD3	set	123
  1313  007C                     _RD4	set	124
  1314  007D                     _RD5	set	125
  1315  007E                     _RD6	set	126
  1316  007F                     _RD7	set	127
  1317  008D                     _TRISBbits	set	141
  1318  008F                     _TRISD	set	143
  1319  008F                     _TRISDbits	set	143
  1320  04CB                     _IRCF0	set	1227
  1321  04CC                     _IRCF1	set	1228
  1322  04CD                     _IRCF2	set	1229
  1323  04CE                     _IRCF3	set	1230
  1324  04C8                     _SCS0	set	1224
  1325  04C9                     _SCS1	set	1225
  1326  04CF                     _SPLLEN	set	1231
  1327  0476                     _TRISC6	set	1142
  1328  0477                     _TRISC7	set	1143
  1329  010F                     _LATDbits	set	271
  1330  018D                     _ANSELBbits	set	397
  1331  018F                     _ANSELD	set	399
  1332  0199                     _RC1REG	set	409
  1333  019D                     _RC1STAbits	set	413
  1334  019B                     _SPBRG	set	411
  1335  019A                     _TX1REG	set	410
  1336  0CF2                     _BRGH	set	3314
  1337  0CEC                     _CREN	set	3308
  1338  0CEF                     _SPEN	set	3311
  1339  0CF4                     _SYNC	set	3316
  1340  0CF5                     _TXEN	set	3317
  1341  0E0F                     _PPSLOCK	set	3599
  1342  0E0F                     _PPSLOCKbits	set	3599
  1343  0E24                     _RXPPSbits	set	3620
  1344  0E9A                     _RB2PPSbits	set	3738
  1345  0828                     STR_3:	
  1346  0828  3425               	retlw	37	;'%'
  1347  0829  346C               	retlw	108	;'l'
  1348  082A  3475               	retlw	117	;'u'
  1349  082B  342E               	retlw	46	;'.'
  1350  082C  3425               	retlw	37	;'%'
  1351  082D  3436               	retlw	54	;'6'
  1352  082E  342E               	retlw	46	;'.'
  1353  082F  3436               	retlw	54	;'6'
  1354  0830  346C               	retlw	108	;'l'
  1355  0831  3475               	retlw	117	;'u'
  1356  0832  3400               	retlw	0
  1357  0833                     STR_2:	
  1358  0833  3448               	retlw	72	;'H'
  1359  0834  3465               	retlw	101	;'e'
  1360  0835  346C               	retlw	108	;'l'
  1361  0836  346C               	retlw	108	;'l'
  1362  0837  346F               	retlw	111	;'o'
  1363  0838  3400               	retlw	0
  1364  0839                     STR_1:	
  1365  0839  3452               	retlw	82	;'R'
  1366  083A  3465               	retlw	101	;'e'
  1367  083B  3461               	retlw	97	;'a'
  1368  083C  3464               	retlw	100	;'d'
  1369  083D  3479               	retlw	121	;'y'
  1370  083E  3400               	retlw	0
  1371                           
  1372                           ; #config settings
  1373  0000                     
  1374                           	psect	cinit
  1375  07F6                     start_initialization:	
  1376  07F6                     __initialization:	
  1377                           
  1378                           ; Clear objects allocated to BANK0
  1379  07F6  3032               	movlw	low __pbssBANK0
  1380  07F7  0084               	movwf	4
  1381  07F8  3000               	movlw	high __pbssBANK0
  1382  07F9  0085               	movwf	5
  1383  07FA  3011               	movlw	17
  1384  07FB  3185  2526         	fcall	clear_ram0
  1385  07FD                     end_of_initialization:	
  1386                           ;End of C runtime variable initialization code
  1387                           
  1388  07FD                     __end_of__initialization:	
  1389  07FD  0020               	movlb	0
  1390  07FE  3186  2E48         	ljmp	_main	;jump to C main() function
  1391                           
  1392                           	psect	bssBANK0
  1393  0032                     __pbssBANK0:	
  1394  0032                     ftoa@buf:	
  1395  0032                     	ds	17
  1396                           
  1397                           	psect	clrtext
  1398  0526                     clear_ram0:	
  1399                           ;	Called with FSR0 containing the base address, and
  1400                           ;	WREG with the size to clear
  1401                           
  1402  0526  0064               	clrwdt	;clear the watchdog before getting into this loop
  1403  0527                     clrloop0:	
  1404  0527  0180               	clrf	0	;clear RAM location pointed to by FSR
  1405  0528  3101               	addfsr 0,1
  1406  0529  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1407  052A  2D27               	goto	clrloop0	;have we reached the end yet?
  1408  052B  3400               	retlw	0	;all done for this memory range, return
  1409                           
  1410                           	psect	cstackCOMMON
  1411  0070                     __pcstackCOMMON:	
  1412  0070                     ?_EUSART_Write:	
  1413  0070                     ??_EUSART_Write:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_internal_16:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ??_internal_16:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ?_Lcd_Port:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ??_Lcd_Port:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_Lcd_Cmd:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_Lcd_Clear:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ?_Lcd_Init:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ?_Lcd_Write_Char:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?_initMain:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ?_main:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446  0070                     ?___aldiv:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0070                     Lcd_Port@a:	
  1450                           ; 4 bytes @ 0x0
  1451                           
  1452  0070                     EUSART_Write@txData:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     ___aldiv@divisor:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458                           
  1459                           ; 4 bytes @ 0x0
  1460  0070                     	ds	1
  1461  0071                     ?_EUSART_Write_Text:	
  1462  0071                     ??_Lcd_Cmd:	
  1463                           ; 1 bytes @ 0x1
  1464                           
  1465  0071                     ??_Lcd_Write_Char:	
  1466                           ; 1 bytes @ 0x1
  1467                           
  1468  0071                     EUSART_Write_Text@text:	
  1469                           ; 1 bytes @ 0x1
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0x1
  1473  0071                     	ds	1
  1474  0072                     Lcd_Write_Char@temp:	
  1475                           
  1476                           ; 1 bytes @ 0x2
  1477  0072                     	ds	1
  1478  0073                     ??_EUSART_Write_Text:	
  1479  0073                     Lcd_Cmd@a:	
  1480                           ; 1 bytes @ 0x3
  1481                           
  1482  0073                     Lcd_Write_Char@y:	
  1483                           ; 1 bytes @ 0x3
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x3
  1487  0073                     	ds	1
  1488  0074                     ??_Lcd_Clear:	
  1489  0074                     ?_Lcd_Set_Cursor:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492  0074                     ??_Lcd_Init:	
  1493                           ; 1 bytes @ 0x4
  1494                           
  1495  0074                     Lcd_Set_Cursor@b:	
  1496                           ; 1 bytes @ 0x4
  1497                           
  1498  0074                     Lcd_Write_Char@a:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  0074                     EUSART_Write_Text@i:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  0074                     ___aldiv@dividend:	
  1505                           ; 2 bytes @ 0x4
  1506                           
  1507                           
  1508                           ; 4 bytes @ 0x4
  1509  0074                     	ds	1
  1510  0075                     ??_Lcd_Set_Cursor:	
  1511  0075                     ?_Lcd_Write_String:	
  1512                           ; 1 bytes @ 0x5
  1513                           
  1514  0075                     Lcd_Write_String@a:	
  1515                           ; 1 bytes @ 0x5
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0x5
  1519  0075                     	ds	1
  1520  0076                     ??_initMain:	
  1521                           
  1522                           ; 1 bytes @ 0x6
  1523  0076                     	ds	1
  1524  0077                     ??_Lcd_Write_String:	
  1525  0077                     Lcd_Set_Cursor@a:	
  1526                           ; 1 bytes @ 0x7
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x7
  1530  0077                     	ds	1
  1531  0078                     ??___aldiv:	
  1532  0078                     Lcd_Set_Cursor@z:	
  1533                           ; 1 bytes @ 0x8
  1534                           
  1535  0078                     Lcd_Write_String@i:	
  1536                           ; 1 bytes @ 0x8
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0x8
  1540  0078                     	ds	1
  1541  0079                     Lcd_Set_Cursor@y:	
  1542  0079                     EUSART_Initialize@x:	
  1543                           ; 1 bytes @ 0x9
  1544                           
  1545                           
  1546                           ; 2 bytes @ 0x9
  1547  0079                     	ds	1
  1548  007A                     Lcd_Set_Cursor@temp:	
  1549                           
  1550                           ; 1 bytes @ 0xA
  1551  007A                     	ds	1
  1552  007B                     ??_main:	
  1553                           
  1554                           ; 1 bytes @ 0xB
  1555  007B                     	ds	3
  1556                           
  1557                           	psect	cstackBANK0
  1558  0020                     __pcstackBANK0:	
  1559  0020                     ___aldiv@counter:	
  1560                           
  1561                           ; 1 bytes @ 0x0
  1562  0020                     	ds	1
  1563  0021                     ___aldiv@sign:	
  1564                           
  1565                           ; 1 bytes @ 0x1
  1566  0021                     	ds	1
  1567  0022                     ___aldiv@quotient:	
  1568                           
  1569                           ; 4 bytes @ 0x2
  1570  0022                     	ds	4
  1571  0026                     ?_EUSART_Initialize:	
  1572  0026                     EUSART_Initialize@baudrate:	
  1573                           ; 1 bytes @ 0x6
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0x6
  1577  0026                     	ds	4
  1578  002A                     ??_EUSART_Initialize:	
  1579                           
  1580                           ; 1 bytes @ 0xA
  1581  002A                     	ds	8
  1582                           
  1583                           	psect	maintext
  1584  0648                     __pmaintext:	
  1585 ;;
  1586 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1587 ;;
  1588 ;; *************** function _main *****************
  1589 ;; Defined at:
  1590 ;;		line 94 in file "Main.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : B1F/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1606 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;Total ram usage:        3 bytes
  1609 ;; Hardware stack levels required when called:    4
  1610 ;; This function calls:
  1611 ;;		_EUSART_Initialize
  1612 ;;		_EUSART_Write
  1613 ;;		_EUSART_Write_Text
  1614 ;;		_Lcd_Clear
  1615 ;;		_Lcd_Set_Cursor
  1616 ;;		_Lcd_Write_String
  1617 ;;		_initMain
  1618 ;; This function is called by:
  1619 ;;		Startup code after reset
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _main
  1625  0648                     _main:	
  1626                           
  1627                           ;Main.c: 95: initMain();
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1631  0648  3185  25D2  3186   	fcall	_initMain
  1632                           
  1633                           ;Main.c: 97: EUSART_Initialize(19200);
  1634  064B  3000               	movlw	0
  1635  064C  0020               	movlb	0	; select bank0
  1636  064D  00A9               	movwf	EUSART_Initialize@baudrate+3
  1637  064E  3000               	movlw	0
  1638  064F  00A8               	movwf	EUSART_Initialize@baudrate+2
  1639  0650  304B               	movlw	75
  1640  0651  00A7               	movwf	EUSART_Initialize@baudrate+1
  1641  0652  3000               	movlw	0
  1642  0653  00A6               	movwf	EUSART_Initialize@baudrate
  1643  0654  3187  2750  3186   	fcall	_EUSART_Initialize
  1644  0657                     l144:	
  1645                           ;Main.c: 99: while(1){
  1646                           
  1647                           
  1648                           ;Main.c: 101: Lcd_Set_Cursor(1,1);
  1649  0657  01F4               	clrf	Lcd_Set_Cursor@b
  1650  0658  0AF4               	incf	Lcd_Set_Cursor@b,f
  1651  0659  3001               	movlw	1
  1652  065A  3186  2608  3186   	fcall	_Lcd_Set_Cursor
  1653                           
  1654                           ;Main.c: 102: _delay((unsigned long)((5)*(16000000/4000.0)));
  1655  065D  301A               	movlw	26
  1656  065E  00FC               	movwf	??_main+1
  1657  065F  30F8               	movlw	248
  1658  0660  00FB               	movwf	??_main
  1659  0661                     u547:	
  1660  0661  0BFB               	decfsz	??_main,f
  1661  0662  2E61               	goto	u547
  1662  0663  0BFC               	decfsz	??_main+1,f
  1663  0664  2E61               	goto	u547
  1664  0665  0000               	nop
  1665                           
  1666                           ;Main.c: 103: Lcd_Write_String("Ready");
  1667  0666  3039               	movlw	low (STR_1| (0+32768))
  1668  0667  00F5               	movwf	Lcd_Write_String@a
  1669  0668  3088               	movlw	high (STR_1| (0+32768))
  1670  0669  00F6               	movwf	Lcd_Write_String@a+1
  1671  066A  3185  258C  3186   	fcall	_Lcd_Write_String
  1672                           
  1673                           ;Main.c: 105: EUSART_Write(17);
  1674  066D  3011               	movlw	17
  1675  066E  3185  252C  3186   	fcall	_EUSART_Write
  1676                           
  1677                           ;Main.c: 107: EUSART_Write_Text("Hello");
  1678  0671  3033               	movlw	low (STR_2| (0+32768))
  1679  0672  00F1               	movwf	EUSART_Write_Text@text
  1680  0673  3088               	movlw	high (STR_2| (0+32768))
  1681  0674  00F2               	movwf	EUSART_Write_Text@text+1
  1682  0675  3185  2572  3186   	fcall	_EUSART_Write_Text
  1683                           
  1684                           ;Main.c: 109: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1685  0678  3029               	movlw	41
  1686  0679  00FD               	movwf	??_main+2
  1687  067A  3096               	movlw	150
  1688  067B  00FC               	movwf	??_main+1
  1689  067C  30A6               	movlw	166
  1690  067D  00FB               	movwf	??_main
  1691  067E                     u557:	
  1692  067E  0BFB               	decfsz	??_main,f
  1693  067F  2E7E               	goto	u557
  1694  0680  0BFC               	decfsz	??_main+1,f
  1695  0681  2E7E               	goto	u557
  1696  0682  0BFD               	decfsz	??_main+2,f
  1697  0683  2E7E               	goto	u557
  1698                           
  1699                           ;Main.c: 110: Lcd_Clear();
  1700  0684  3185  2534  3186   	fcall	_Lcd_Clear
  1701  0687  2E57               	goto	l144
  1702  0688                     __end_of_main:	
  1703                           ;Main.c: 111: }
  1704                           ;Main.c: 113: return;
  1705                           
  1706                           
  1707                           	psect	text1
  1708  05D2                     __ptext1:	
  1709 ;; *************** function _initMain *****************
  1710 ;; Defined at:
  1711 ;;		line 49 in file "Main.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;Total ram usage:        3 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    3
  1732 ;; This function calls:
  1733 ;;		_Lcd_Clear
  1734 ;;		_Lcd_Init
  1735 ;;		_internal_16
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _initMain
  1743  05D2                     _initMain:	
  1744                           
  1745                           ;Main.c: 51: internal_16();
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1749  05D2  3185  253C  3185   	fcall	_internal_16
  1750                           
  1751                           ;Main.c: 54: TRISDbits.TRISD1 = 0;
  1752  05D5  0021               	movlb	1	; select bank1
  1753  05D6  108F               	bcf	15,1	;volatile
  1754                           
  1755                           ;Main.c: 57: LATDbits.LATD1 = 0;
  1756  05D7  0022               	movlb	2	; select bank2
  1757  05D8  108F               	bcf	15,1	;volatile
  1758                           
  1759                           ;Main.c: 60: TRISD = 0;
  1760  05D9  0021               	movlb	1	; select bank1
  1761  05DA  018F               	clrf	15	;volatile
  1762                           
  1763                           ;Main.c: 61: ANSELD = 0;
  1764  05DB  0023               	movlb	3	; select bank3
  1765  05DC  018F               	clrf	15	;volatile
  1766                           
  1767                           ;Main.c: 64: Lcd_Init();
  1768  05DD  3186  2688  3185   	fcall	_Lcd_Init
  1769                           
  1770                           ;Main.c: 65: _delay((unsigned long)((100)*(16000000/4000.0)));
  1771  05E0  3003               	movlw	3
  1772  05E1  00F8               	movwf	??_initMain+2
  1773  05E2  3008               	movlw	8
  1774  05E3  00F7               	movwf	??_initMain+1
  1775  05E4  3078               	movlw	120
  1776  05E5  00F6               	movwf	??_initMain
  1777  05E6                     u567:	
  1778  05E6  0BF6               	decfsz	??_initMain,f
  1779  05E7  2DE6               	goto	u567
  1780  05E8  0BF7               	decfsz	??_initMain+1,f
  1781  05E9  2DE6               	goto	u567
  1782  05EA  0BF8               	decfsz	??_initMain+2,f
  1783  05EB  2DE6               	goto	u567
  1784                           
  1785                           ;Main.c: 66: Lcd_Clear();
  1786  05EC  3185  2534         	fcall	_Lcd_Clear
  1787                           
  1788                           ;Main.c: 68: TRISBbits.TRISB2 = 0;
  1789  05EE  0021               	movlb	1	; select bank1
  1790  05EF  110D               	bcf	13,2	;volatile
  1791                           
  1792                           ;Main.c: 69: ANSELBbits.ANSB2 = 0;
  1793  05F0  0023               	movlb	3	; select bank3
  1794  05F1  110D               	bcf	13,2	;volatile
  1795                           
  1796                           ;Main.c: 74: PPSLOCK = 0x55;
  1797  05F2  3055               	movlw	85
  1798  05F3  003C               	movlb	28	; select bank28
  1799  05F4  008F               	movwf	15	;volatile
  1800                           
  1801                           ;Main.c: 75: PPSLOCK = 0xAA;
  1802  05F5  30AA               	movlw	170
  1803  05F6  008F               	movwf	15	;volatile
  1804                           
  1805                           ;Main.c: 76: PPSLOCKbits.PPSLOCKED = 0x00;
  1806  05F7  100F               	bcf	15,0	;volatile
  1807                           
  1808                           ;Main.c: 78: RB2PPSbits.RB2PPS = 0x14;
  1809  05F8  003D               	movlb	29	; select bank29
  1810  05F9  081A               	movf	26,w	;volatile
  1811  05FA  39E0               	andlw	-32
  1812  05FB  3814               	iorlw	20
  1813  05FC  009A               	movwf	26	;volatile
  1814                           
  1815                           ;Main.c: 79: RXPPSbits.RXPPS = 0x0B;
  1816  05FD  003C               	movlb	28	; select bank28
  1817  05FE  0824               	movf	36,w	;volatile
  1818  05FF  39E0               	andlw	-32
  1819  0600  380B               	iorlw	11
  1820  0601  00A4               	movwf	36	;volatile
  1821                           
  1822                           ;Main.c: 81: PPSLOCK = 0x55;
  1823  0602  3055               	movlw	85
  1824  0603  008F               	movwf	15	;volatile
  1825                           
  1826                           ;Main.c: 82: PPSLOCK = 0xAA;
  1827  0604  30AA               	movlw	170
  1828  0605  008F               	movwf	15	;volatile
  1829                           
  1830                           ;Main.c: 83: PPSLOCKbits.PPSLOCKED = 0x01;
  1831  0606  140F               	bsf	15,0	;volatile
  1832  0607  0008               	return
  1833  0608                     __end_of_initMain:	
  1834                           
  1835                           	psect	text2
  1836  053C                     __ptext2:	
  1837 ;; *************** function _internal_16 *****************
  1838 ;; Defined at:
  1839 ;;		line 56 in file "16F1717_Internal.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		None
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_initMain
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _internal_16
  1868  053C                     _internal_16:	
  1869                           
  1870                           ;16F1717_Internal.c: 58: SCS0 = 0;
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _internal_16: []
  1874  053C  0021               	movlb	1	; select bank1
  1875  053D  1019               	bcf	25,0	;volatile
  1876                           
  1877                           ;16F1717_Internal.c: 59: SCS1 = 0;
  1878  053E  1099               	bcf	25,1	;volatile
  1879                           
  1880                           ;16F1717_Internal.c: 62: IRCF0 = 1;
  1881  053F  1599               	bsf	25,3	;volatile
  1882                           
  1883                           ;16F1717_Internal.c: 63: IRCF1 = 1;
  1884  0540  1619               	bsf	25,4	;volatile
  1885                           
  1886                           ;16F1717_Internal.c: 64: IRCF2 = 1;
  1887  0541  1699               	bsf	25,5	;volatile
  1888                           
  1889                           ;16F1717_Internal.c: 65: IRCF3 = 1;
  1890  0542  1719               	bsf	25,6	;volatile
  1891                           
  1892                           ;16F1717_Internal.c: 68: SPLLEN = 0;
  1893  0543  1399               	bcf	25,7	;volatile
  1894  0544  0008               	return
  1895  0545                     __end_of_internal_16:	
  1896                           
  1897                           	psect	text3
  1898  0688                     __ptext3:	
  1899 ;; *************** function _Lcd_Init *****************
  1900 ;; Defined at:
  1901 ;;		line 119 in file "LCD.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    2
  1922 ;; This function calls:
  1923 ;;		_Lcd_Cmd
  1924 ;;		_Lcd_Port
  1925 ;; This function is called by:
  1926 ;;		_initMain
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _Lcd_Init
  1932  0688                     _Lcd_Init:	
  1933                           
  1934                           ;LCD.c: 121: Lcd_Port(0x00);
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1938  0688  3000               	movlw	0
  1939  0689  3185  255A  3186   	fcall	_Lcd_Port
  1940                           
  1941                           ;LCD.c: 122: _delay((unsigned long)((20)*(16000000/4000.0)));
  1942  068C  3068               	movlw	104
  1943  068D  00F5               	movwf	??_Lcd_Init+1
  1944  068E  30E4               	movlw	228
  1945  068F  00F4               	movwf	??_Lcd_Init
  1946  0690                     u577:	
  1947  0690  0BF4               	decfsz	??_Lcd_Init,f
  1948  0691  2E90               	goto	u577
  1949  0692  0BF5               	decfsz	??_Lcd_Init+1,f
  1950  0693  2E90               	goto	u577
  1951  0694  0000               	nop
  1952                           
  1953                           ;LCD.c: 123: Lcd_Cmd(0x03);
  1954  0695  3003               	movlw	3
  1955  0696  3185  2545  3186   	fcall	_Lcd_Cmd
  1956                           
  1957                           ;LCD.c: 124: _delay((unsigned long)((5)*(16000000/4000.0)));
  1958  0699  301A               	movlw	26
  1959  069A  00F5               	movwf	??_Lcd_Init+1
  1960  069B  30F8               	movlw	248
  1961  069C  00F4               	movwf	??_Lcd_Init
  1962  069D                     u587:	
  1963  069D  0BF4               	decfsz	??_Lcd_Init,f
  1964  069E  2E9D               	goto	u587
  1965  069F  0BF5               	decfsz	??_Lcd_Init+1,f
  1966  06A0  2E9D               	goto	u587
  1967  06A1  0000               	nop
  1968                           
  1969                           ;LCD.c: 125: Lcd_Cmd(0x03);
  1970  06A2  3003               	movlw	3
  1971  06A3  3185  2545  3186   	fcall	_Lcd_Cmd
  1972                           
  1973                           ;LCD.c: 126: _delay((unsigned long)((11)*(16000000/4000.0)));
  1974  06A6  303A               	movlw	58
  1975  06A7  00F5               	movwf	??_Lcd_Init+1
  1976  06A8  3023               	movlw	35
  1977  06A9  00F4               	movwf	??_Lcd_Init
  1978  06AA                     u597:	
  1979  06AA  0BF4               	decfsz	??_Lcd_Init,f
  1980  06AB  2EAA               	goto	u597
  1981  06AC  0BF5               	decfsz	??_Lcd_Init+1,f
  1982  06AD  2EAA               	goto	u597
  1983                           
  1984                           ;LCD.c: 127: Lcd_Cmd(0x03);
  1985  06AE  3003               	movlw	3
  1986  06AF  3185  2545  3186   	fcall	_Lcd_Cmd
  1987                           
  1988                           ;LCD.c: 129: Lcd_Cmd(0x02);
  1989  06B2  3002               	movlw	2
  1990  06B3  3185  2545  3186   	fcall	_Lcd_Cmd
  1991                           
  1992                           ;LCD.c: 130: Lcd_Cmd(0x02);
  1993  06B6  3002               	movlw	2
  1994  06B7  3185  2545  3186   	fcall	_Lcd_Cmd
  1995                           
  1996                           ;LCD.c: 131: Lcd_Cmd(0x08);
  1997  06BA  3008               	movlw	8
  1998  06BB  3185  2545  3186   	fcall	_Lcd_Cmd
  1999                           
  2000                           ;LCD.c: 132: Lcd_Cmd(0x00);
  2001  06BE  3000               	movlw	0
  2002  06BF  3185  2545  3186   	fcall	_Lcd_Cmd
  2003                           
  2004                           ;LCD.c: 133: Lcd_Cmd(0x0C);
  2005  06C2  300C               	movlw	12
  2006  06C3  3185  2545  3186   	fcall	_Lcd_Cmd
  2007                           
  2008                           ;LCD.c: 134: Lcd_Cmd(0x00);
  2009  06C6  3000               	movlw	0
  2010  06C7  3185  2545  3186   	fcall	_Lcd_Cmd
  2011                           
  2012                           ;LCD.c: 135: Lcd_Cmd(0x06);
  2013  06CA  3006               	movlw	6
  2014  06CB  3185  2545         	fcall	_Lcd_Cmd
  2015  06CD  0008               	return
  2016  06CE                     __end_of_Lcd_Init:	
  2017                           
  2018                           	psect	text4
  2019  0534                     __ptext4:	
  2020 ;; *************** function _Lcd_Clear *****************
  2021 ;; Defined at:
  2022 ;;		line 76 in file "LCD.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    2
  2043 ;; This function calls:
  2044 ;;		_Lcd_Cmd
  2045 ;; This function is called by:
  2046 ;;		_initMain
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _Lcd_Clear
  2053  0534                     _Lcd_Clear:	
  2054                           
  2055                           ;LCD.c: 78: Lcd_Cmd(0);
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2059  0534  3000               	movlw	0
  2060  0535  3185  2545  3185   	fcall	_Lcd_Cmd
  2061                           
  2062                           ;LCD.c: 79: Lcd_Cmd(1);
  2063  0538  3001               	movlw	1
  2064  0539  3185  2545         	fcall	_Lcd_Cmd
  2065  053B  0008               	return
  2066  053C                     __end_of_Lcd_Clear:	
  2067                           
  2068                           	psect	text5
  2069  058C                     __ptext5:	
  2070 ;; *************** function _Lcd_Write_String *****************
  2071 ;; Defined at:
  2072 ;;		line 170 in file "LCD.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  a               2    5[COMMON] PTR const unsigned char 
  2075 ;;		 -> ftoa@buf(17), STR_1(6), Lcd_Write_Integer@buf(8), 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  i               2    8[COMMON] int 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;Total ram usage:        5 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    2
  2094 ;; This function calls:
  2095 ;;		_Lcd_Write_Char
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;;		_Lcd_Write_Integer
  2099 ;;		_Lcd_Write_Float
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _Lcd_Write_String
  2105  058C                     _Lcd_Write_String:	
  2106                           
  2107                           ;LCD.c: 172: int i;
  2108                           ;LCD.c: 173: for(i=0;a[i]!='\0';i++)
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2112  058C  01F8               	clrf	Lcd_Write_String@i
  2113  058D  01F9               	clrf	Lcd_Write_String@i+1
  2114  058E                     l972:	
  2115  058E  0875               	movf	Lcd_Write_String@a,w
  2116  058F  0778               	addwf	Lcd_Write_String@i,w
  2117  0590  0084               	movwf	4
  2118  0591  0876               	movf	Lcd_Write_String@a+1,w
  2119  0592  3D79               	addwfc	Lcd_Write_String@i+1,w
  2120  0593  0085               	movwf	5
  2121  0594  0012               	moviw fsr0++
  2122  0595  1903               	btfsc	3,2
  2123  0596  0008               	return
  2124                           
  2125                           ;LCD.c: 174: Lcd_Write_Char(a[i]);
  2126  0597  0875               	movf	Lcd_Write_String@a,w
  2127  0598  0778               	addwf	Lcd_Write_String@i,w
  2128  0599  0084               	movwf	4
  2129  059A  0876               	movf	Lcd_Write_String@a+1,w
  2130  059B  3D79               	addwfc	Lcd_Write_String@i+1,w
  2131  059C  0085               	movwf	5
  2132  059D  0800               	movf	0,w	;code access
  2133  059E  3185  25A6  3185   	fcall	_Lcd_Write_Char
  2134  05A1  3001               	movlw	1
  2135  05A2  07F8               	addwf	Lcd_Write_String@i,f
  2136  05A3  3000               	movlw	0
  2137  05A4  3DF9               	addwfc	Lcd_Write_String@i+1,f
  2138  05A5  2D8E               	goto	l972
  2139  05A6                     __end_of_Lcd_Write_String:	
  2140                           
  2141                           	psect	text6
  2142  05A6                     __ptext6:	
  2143 ;; *************** function _Lcd_Write_Char *****************
  2144 ;; Defined at:
  2145 ;;		line 146 in file "LCD.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  a               1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  a               1    4[COMMON] unsigned char 
  2150 ;;  y               1    3[COMMON] unsigned char 
  2151 ;;  temp            1    2[COMMON] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;Total ram usage:        4 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    1
  2168 ;; This function calls:
  2169 ;;		_Lcd_Port
  2170 ;; This function is called by:
  2171 ;;		_Lcd_Write_String
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function _Lcd_Write_Char
  2177  05A6                     _Lcd_Write_Char:	
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2181                           ;Lcd_Write_Char@a stored from wreg
  2182  05A6  00F4               	movwf	Lcd_Write_Char@a
  2183                           
  2184                           ;LCD.c: 148: char temp,y;
  2185                           ;LCD.c: 149: temp = a&0x0F;
  2186  05A7  0874               	movf	Lcd_Write_Char@a,w
  2187  05A8  390F               	andlw	15
  2188  05A9  00F1               	movwf	??_Lcd_Write_Char
  2189  05AA  0871               	movf	??_Lcd_Write_Char,w
  2190  05AB  00F2               	movwf	Lcd_Write_Char@temp
  2191                           
  2192                           ;LCD.c: 150: y = a&0xF0;
  2193  05AC  0874               	movf	Lcd_Write_Char@a,w
  2194  05AD  39F0               	andlw	240
  2195  05AE  00F1               	movwf	??_Lcd_Write_Char
  2196  05AF  0871               	movf	??_Lcd_Write_Char,w
  2197  05B0  00F3               	movwf	Lcd_Write_Char@y
  2198                           
  2199                           ;LCD.c: 151: RD2 = 1;
  2200  05B1  0020               	movlb	0	; select bank0
  2201  05B2  150F               	bsf	15,2	;volatile
  2202                           
  2203                           ;LCD.c: 152: Lcd_Port(y>>4);
  2204  05B3  0873               	movf	Lcd_Write_Char@y,w
  2205  05B4  00F1               	movwf	??_Lcd_Write_Char
  2206  05B5  3004               	movlw	4
  2207  05B6                     u55:	
  2208  05B6  36F1               	lsrf	??_Lcd_Write_Char,f
  2209  05B7  0B89               	decfsz	9,f
  2210  05B8  2DB6               	goto	u55
  2211  05B9  0871               	movf	??_Lcd_Write_Char,w
  2212  05BA  3185  255A  3185   	fcall	_Lcd_Port
  2213                           
  2214                           ;LCD.c: 153: RD3 = 1;
  2215  05BD  0020               	movlb	0	; select bank0
  2216  05BE  158F               	bsf	15,3	;volatile
  2217                           
  2218                           ;LCD.c: 154: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2219  05BF  3035               	movlw	53
  2220  05C0  00F1               	movwf	??_Lcd_Write_Char
  2221  05C1                     u607:	
  2222  05C1  0BF1               	decfsz	??_Lcd_Write_Char,f
  2223  05C2  2DC1               	goto	u607
  2224                           
  2225                           ;LCD.c: 155: RD3 = 0;
  2226  05C3  0020               	movlb	0	; select bank0
  2227  05C4  118F               	bcf	15,3	;volatile
  2228                           
  2229                           ;LCD.c: 156: Lcd_Port(temp);
  2230  05C5  0872               	movf	Lcd_Write_Char@temp,w
  2231  05C6  3185  255A  3185   	fcall	_Lcd_Port
  2232                           
  2233                           ;LCD.c: 157: RD3 = 1;
  2234  05C9  0020               	movlb	0	; select bank0
  2235  05CA  158F               	bsf	15,3	;volatile
  2236                           
  2237                           ;LCD.c: 158: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2238  05CB  3035               	movlw	53
  2239  05CC  00F1               	movwf	??_Lcd_Write_Char
  2240  05CD                     u617:	
  2241  05CD  0BF1               	decfsz	??_Lcd_Write_Char,f
  2242  05CE  2DCD               	goto	u617
  2243                           
  2244                           ;LCD.c: 159: RD3 = 0;
  2245  05CF  0020               	movlb	0	; select bank0
  2246  05D0  118F               	bcf	15,3	;volatile
  2247  05D1  0008               	return
  2248  05D2                     __end_of_Lcd_Write_Char:	
  2249                           
  2250                           	psect	text7
  2251  0608                     __ptext7:	
  2252 ;; *************** function _Lcd_Set_Cursor *****************
  2253 ;; Defined at:
  2254 ;;		line 90 in file "LCD.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  a               1    wreg     unsigned char 
  2257 ;;  b               1    4[COMMON] unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  a               1    7[COMMON] unsigned char 
  2260 ;;  temp            1   10[COMMON] unsigned char 
  2261 ;;  y               1    9[COMMON] unsigned char 
  2262 ;;  z               1    8[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2272 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;Total ram usage:        7 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    2
  2279 ;; This function calls:
  2280 ;;		_Lcd_Cmd
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _Lcd_Set_Cursor
  2288  0608                     _Lcd_Set_Cursor:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2292                           ;Lcd_Set_Cursor@a stored from wreg
  2293  0608  00F7               	movwf	Lcd_Set_Cursor@a
  2294                           
  2295                           ;LCD.c: 92: char temp,z,y;
  2296                           ;LCD.c: 93: if(a == 1)
  2297  0609  0377               	decf	Lcd_Set_Cursor@a,w
  2298  060A  1D03               	btfss	3,2
  2299  060B  2E28               	goto	l956
  2300                           
  2301                           ;LCD.c: 94: {
  2302                           ;LCD.c: 95: temp = 0x80 + b - 1;
  2303  060C  0874               	movf	Lcd_Set_Cursor@b,w
  2304  060D  3E7F               	addlw	127
  2305  060E  00F5               	movwf	??_Lcd_Set_Cursor
  2306  060F  0875               	movf	??_Lcd_Set_Cursor,w
  2307  0610  00FA               	movwf	Lcd_Set_Cursor@temp
  2308                           
  2309                           ;LCD.c: 96: z = temp>>4;
  2310  0611  087A               	movf	Lcd_Set_Cursor@temp,w
  2311  0612  00F5               	movwf	??_Lcd_Set_Cursor
  2312  0613  3004               	movlw	4
  2313  0614                     u435:	
  2314  0614  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2315  0615  0B89               	decfsz	9,f
  2316  0616  2E14               	goto	u435
  2317  0617  0875               	movf	??_Lcd_Set_Cursor,w
  2318  0618  00F6               	movwf	??_Lcd_Set_Cursor+1
  2319  0619  0876               	movf	??_Lcd_Set_Cursor+1,w
  2320  061A  00F8               	movwf	Lcd_Set_Cursor@z
  2321                           
  2322                           ;LCD.c: 97: y = temp & 0x0F;
  2323  061B  087A               	movf	Lcd_Set_Cursor@temp,w
  2324  061C  390F               	andlw	15
  2325  061D  00F5               	movwf	??_Lcd_Set_Cursor
  2326  061E  0875               	movf	??_Lcd_Set_Cursor,w
  2327  061F  00F9               	movwf	Lcd_Set_Cursor@y
  2328                           
  2329                           ;LCD.c: 98: Lcd_Cmd(z);
  2330  0620  0878               	movf	Lcd_Set_Cursor@z,w
  2331  0621  3185  2545  3186   	fcall	_Lcd_Cmd
  2332                           
  2333                           ;LCD.c: 99: Lcd_Cmd(y);
  2334  0624  0879               	movf	Lcd_Set_Cursor@y,w
  2335  0625  3185  2545         	fcall	_Lcd_Cmd
  2336                           
  2337                           ;LCD.c: 100: }
  2338  0627  0008               	return
  2339  0628                     l956:	
  2340                           
  2341                           ;LCD.c: 101: else if(a == 2)
  2342  0628  3002               	movlw	2
  2343  0629  0677               	xorwf	Lcd_Set_Cursor@a,w
  2344  062A  1D03               	btfss	3,2
  2345  062B  0008               	return
  2346                           
  2347                           ;LCD.c: 102: {
  2348                           ;LCD.c: 103: temp = 0xC0 + b - 1;
  2349  062C  0874               	movf	Lcd_Set_Cursor@b,w
  2350  062D  3EBF               	addlw	191
  2351  062E  00F5               	movwf	??_Lcd_Set_Cursor
  2352  062F  0875               	movf	??_Lcd_Set_Cursor,w
  2353  0630  00FA               	movwf	Lcd_Set_Cursor@temp
  2354                           
  2355                           ;LCD.c: 104: z = temp>>4;
  2356  0631  087A               	movf	Lcd_Set_Cursor@temp,w
  2357  0632  00F5               	movwf	??_Lcd_Set_Cursor
  2358  0633  3004               	movlw	4
  2359  0634                     u455:	
  2360  0634  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2361  0635  0B89               	decfsz	9,f
  2362  0636  2E34               	goto	u455
  2363  0637  0875               	movf	??_Lcd_Set_Cursor,w
  2364  0638  00F6               	movwf	??_Lcd_Set_Cursor+1
  2365  0639  0876               	movf	??_Lcd_Set_Cursor+1,w
  2366  063A  00F8               	movwf	Lcd_Set_Cursor@z
  2367                           
  2368                           ;LCD.c: 105: y = temp & 0x0F;
  2369  063B  087A               	movf	Lcd_Set_Cursor@temp,w
  2370  063C  390F               	andlw	15
  2371  063D  00F5               	movwf	??_Lcd_Set_Cursor
  2372  063E  0875               	movf	??_Lcd_Set_Cursor,w
  2373  063F  00F9               	movwf	Lcd_Set_Cursor@y
  2374                           
  2375                           ;LCD.c: 106: Lcd_Cmd(z);
  2376  0640  0878               	movf	Lcd_Set_Cursor@z,w
  2377  0641  3185  2545  3186   	fcall	_Lcd_Cmd
  2378                           
  2379                           ;LCD.c: 107: Lcd_Cmd(y);
  2380  0644  0879               	movf	Lcd_Set_Cursor@y,w
  2381  0645  3185  2545         	fcall	_Lcd_Cmd
  2382  0647  0008               	return
  2383  0648                     __end_of_Lcd_Set_Cursor:	
  2384                           
  2385                           	psect	text8
  2386  0545                     __ptext8:	
  2387 ;; *************** function _Lcd_Cmd *****************
  2388 ;; Defined at:
  2389 ;;		line 59 in file "LCD.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  a               1    wreg     unsigned char 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  a               1    3[COMMON] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;Total ram usage:        3 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    1
  2410 ;; This function calls:
  2411 ;;		_Lcd_Port
  2412 ;; This function is called by:
  2413 ;;		_Lcd_Clear
  2414 ;;		_Lcd_Set_Cursor
  2415 ;;		_Lcd_Init
  2416 ;;		_Lcd_Shift_Right
  2417 ;;		_Lcd_Shift_Left
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function _Lcd_Cmd
  2423  0545                     _Lcd_Cmd:	
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2427                           ;Lcd_Cmd@a stored from wreg
  2428  0545  00F3               	movwf	Lcd_Cmd@a
  2429                           
  2430                           ;LCD.c: 61: RD2 = 0;
  2431  0546  0020               	movlb	0	; select bank0
  2432  0547  110F               	bcf	15,2	;volatile
  2433                           
  2434                           ;LCD.c: 62: Lcd_Port(a);
  2435  0548  0873               	movf	Lcd_Cmd@a,w
  2436  0549  3185  255A  3185   	fcall	_Lcd_Port
  2437                           
  2438                           ;LCD.c: 63: RD3 = 1;
  2439  054C  0020               	movlb	0	; select bank0
  2440  054D  158F               	bsf	15,3	;volatile
  2441                           
  2442                           ;LCD.c: 64: _delay((unsigned long)((4)*(16000000/4000.0)));
  2443  054E  3015               	movlw	21
  2444  054F  00F2               	movwf	??_Lcd_Cmd+1
  2445  0550  30C6               	movlw	198
  2446  0551  00F1               	movwf	??_Lcd_Cmd
  2447  0552                     u627:	
  2448  0552  0BF1               	decfsz	??_Lcd_Cmd,f
  2449  0553  2D52               	goto	u627
  2450  0554  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2451  0555  2D52               	goto	u627
  2452  0556  0000               	nop
  2453                           
  2454                           ;LCD.c: 65: RD3 = 0;
  2455  0557  0020               	movlb	0	; select bank0
  2456  0558  118F               	bcf	15,3	;volatile
  2457  0559  0008               	return
  2458  055A                     __end_of_Lcd_Cmd:	
  2459                           
  2460                           	psect	text9
  2461  055A                     __ptext9:	
  2462 ;; *************** function _Lcd_Port *****************
  2463 ;; Defined at:
  2464 ;;		line 28 in file "LCD.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  a               1    wreg     unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  a               1    0[COMMON] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;Total ram usage:        1 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_Lcd_Cmd
  2488 ;;		_Lcd_Init
  2489 ;;		_Lcd_Write_Char
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           
  2494                           ;psect for function _Lcd_Port
  2495  055A                     _Lcd_Port:	
  2496                           
  2497                           ;incstack = 0
  2498                           ; Regs used in _Lcd_Port: [wreg]
  2499                           ;Lcd_Port@a stored from wreg
  2500  055A  00F0               	movwf	Lcd_Port@a
  2501                           
  2502                           ;LCD.c: 30: if(a & 1)
  2503  055B  1C70               	btfss	Lcd_Port@a,0
  2504  055C  2D60               	goto	l56
  2505                           
  2506                           ;LCD.c: 31: RD4 = 1;
  2507  055D  0020               	movlb	0	; select bank0
  2508  055E  160F               	bsf	15,4	;volatile
  2509  055F  2D62               	goto	l660
  2510  0560                     l56:	
  2511                           
  2512                           ;LCD.c: 32: else
  2513                           ;LCD.c: 33: RD4 = 0;
  2514  0560  0020               	movlb	0	; select bank0
  2515  0561  120F               	bcf	15,4	;volatile
  2516  0562                     l660:	
  2517                           
  2518                           ;LCD.c: 35: if(a & 2)
  2519  0562  1CF0               	btfss	Lcd_Port@a,1
  2520  0563  2D66               	goto	l58
  2521                           
  2522                           ;LCD.c: 36: RD5 = 1;
  2523  0564  168F               	bsf	15,5	;volatile
  2524  0565  2D67               	goto	l664
  2525  0566                     l58:	
  2526                           
  2527                           ;LCD.c: 37: else
  2528                           ;LCD.c: 38: RD5 = 0;
  2529  0566  128F               	bcf	15,5	;volatile
  2530  0567                     l664:	
  2531                           
  2532                           ;LCD.c: 40: if(a & 4)
  2533  0567  1D70               	btfss	Lcd_Port@a,2
  2534  0568  2D6B               	goto	l60
  2535                           
  2536                           ;LCD.c: 41: RD6 = 1;
  2537  0569  170F               	bsf	15,6	;volatile
  2538  056A  2D6C               	goto	l668
  2539  056B                     l60:	
  2540                           
  2541                           ;LCD.c: 42: else
  2542                           ;LCD.c: 43: RD6 = 0;
  2543  056B  130F               	bcf	15,6	;volatile
  2544  056C                     l668:	
  2545                           
  2546                           ;LCD.c: 45: if(a & 8)
  2547  056C  1DF0               	btfss	Lcd_Port@a,3
  2548  056D  2D70               	goto	l62
  2549                           
  2550                           ;LCD.c: 46: RD7 = 1;
  2551  056E  178F               	bsf	15,7	;volatile
  2552  056F  0008               	return
  2553  0570                     l62:	
  2554                           
  2555                           ;LCD.c: 47: else
  2556                           ;LCD.c: 48: RD7 = 0;
  2557  0570  138F               	bcf	15,7	;volatile
  2558  0571  0008               	return
  2559  0572                     __end_of_Lcd_Port:	
  2560                           
  2561                           	psect	text10
  2562  0572                     __ptext10:	
  2563 ;; *************** function _EUSART_Write_Text *****************
  2564 ;; Defined at:
  2565 ;;		line 65 in file "EUSART.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  text            2    1[COMMON] PTR unsigned char 
  2568 ;;		 -> STR_2(6), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  i               2    4[COMMON] int 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;Total ram usage:        5 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    1
  2587 ;; This function calls:
  2588 ;;		_EUSART_Write
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _EUSART_Write_Text
  2596  0572                     _EUSART_Write_Text:	
  2597                           
  2598                           ;EUSART.c: 67: int i;
  2599                           ;EUSART.c: 68: for(i=0;text[i]!='\0';i++)
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2603  0572  01F4               	clrf	EUSART_Write_Text@i
  2604  0573  01F5               	clrf	EUSART_Write_Text@i+1
  2605  0574                     l1006:	
  2606  0574  0871               	movf	EUSART_Write_Text@text,w
  2607  0575  0774               	addwf	EUSART_Write_Text@i,w
  2608  0576  0084               	movwf	4
  2609  0577  0872               	movf	EUSART_Write_Text@text+1,w
  2610  0578  3D75               	addwfc	EUSART_Write_Text@i+1,w
  2611  0579  0085               	movwf	5
  2612  057A  0012               	moviw fsr0++
  2613  057B  1903               	btfsc	3,2
  2614  057C  0008               	return
  2615                           
  2616                           ;EUSART.c: 69: EUSART_Write(text[i]);
  2617  057D  0871               	movf	EUSART_Write_Text@text,w
  2618  057E  0774               	addwf	EUSART_Write_Text@i,w
  2619  057F  0084               	movwf	4
  2620  0580  0872               	movf	EUSART_Write_Text@text+1,w
  2621  0581  3D75               	addwfc	EUSART_Write_Text@i+1,w
  2622  0582  0085               	movwf	5
  2623  0583  0800               	movf	0,w	;code access
  2624  0584  3185  252C  3185   	fcall	_EUSART_Write
  2625  0587  3001               	movlw	1
  2626  0588  07F4               	addwf	EUSART_Write_Text@i,f
  2627  0589  3000               	movlw	0
  2628  058A  3DF5               	addwfc	EUSART_Write_Text@i+1,f
  2629  058B  2D74               	goto	l1006
  2630  058C                     __end_of_EUSART_Write_Text:	
  2631                           
  2632                           	psect	text11
  2633  052C                     __ptext11:	
  2634 ;; *************** function _EUSART_Write *****************
  2635 ;; Defined at:
  2636 ;;		line 49 in file "EUSART.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  txData          1    wreg     unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  txData          1    0[COMMON] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;Total ram usage:        1 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;;		_EUSART_Write_Text
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _EUSART_Write
  2666  052C                     _EUSART_Write:	
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in _EUSART_Write: [wreg]
  2670                           ;EUSART_Write@txData stored from wreg
  2671  052C  00F0               	movwf	EUSART_Write@txData
  2672  052D                     l186:	
  2673                           ;EUSART.c: 52: {
  2674                           
  2675                           ;EUSART.c: 51: while(0 == PIR1bits.TXIF)
  2676                           
  2677  052D  0020               	movlb	0	; select bank0
  2678  052E  1E11               	btfss	17,4	;volatile
  2679  052F  2D2D               	goto	l186
  2680                           
  2681                           ;EUSART.c: 53: }
  2682                           ;EUSART.c: 55: TX1REG = txData;
  2683  0530  0870               	movf	EUSART_Write@txData,w
  2684  0531  0023               	movlb	3	; select bank3
  2685  0532  009A               	movwf	26	;volatile
  2686  0533  0008               	return
  2687  0534                     __end_of_EUSART_Write:	
  2688                           
  2689                           	psect	text12
  2690  0750                     __ptext12:	
  2691 ;; *************** function _EUSART_Initialize *****************
  2692 ;; Defined at:
  2693 ;;		line 4 in file "EUSART.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  baudrate        4    6[BANK0 ] const long 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  x               2    9[COMMON] unsigned int 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      unsigned char 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;Total ram usage:       14 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    1
  2714 ;; This function calls:
  2715 ;;		___aldiv
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _EUSART_Initialize
  2723  0750                     _EUSART_Initialize:	
  2724                           
  2725                           ;EUSART.c: 6: unsigned int x;
  2726                           ;EUSART.c: 7: x = (16000000 - baudrate*64)/(baudrate*64);
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2730  0750  0020               	movlb	0	; select bank0
  2731  0751  0826               	movf	EUSART_Initialize@baudrate,w
  2732  0752  00AA               	movwf	??_EUSART_Initialize
  2733  0753  0827               	movf	EUSART_Initialize@baudrate+1,w
  2734  0754  00AB               	movwf	??_EUSART_Initialize+1
  2735  0755  0828               	movf	EUSART_Initialize@baudrate+2,w
  2736  0756  00AC               	movwf	??_EUSART_Initialize+2
  2737  0757  0829               	movf	EUSART_Initialize@baudrate+3,w
  2738  0758  00AD               	movwf	??_EUSART_Initialize+3
  2739  0759  3006               	movlw	6
  2740  075A                     u475:	
  2741  075A  35AA               	lslf	??_EUSART_Initialize,f
  2742  075B  0DAB               	rlf	??_EUSART_Initialize+1,f
  2743  075C  0DAC               	rlf	??_EUSART_Initialize+2,f
  2744  075D  0DAD               	rlf	??_EUSART_Initialize+3,f
  2745  075E  0B89               	decfsz	9,f
  2746  075F  2F5A               	goto	u475
  2747  0760  082D               	movf	??_EUSART_Initialize+3,w
  2748  0761  00F3               	movwf	___aldiv@divisor+3
  2749  0762  082C               	movf	??_EUSART_Initialize+2,w
  2750  0763  00F2               	movwf	___aldiv@divisor+2
  2751  0764  082B               	movf	??_EUSART_Initialize+1,w
  2752  0765  00F1               	movwf	___aldiv@divisor+1
  2753  0766  082A               	movf	??_EUSART_Initialize,w
  2754  0767  00F0               	movwf	___aldiv@divisor
  2755  0768  0826               	movf	EUSART_Initialize@baudrate,w
  2756  0769  00AE               	movwf	??_EUSART_Initialize+4
  2757  076A  0827               	movf	EUSART_Initialize@baudrate+1,w
  2758  076B  00AF               	movwf	??_EUSART_Initialize+5
  2759  076C  0828               	movf	EUSART_Initialize@baudrate+2,w
  2760  076D  00B0               	movwf	??_EUSART_Initialize+6
  2761  076E  0829               	movf	EUSART_Initialize@baudrate+3,w
  2762  076F  00B1               	movwf	??_EUSART_Initialize+7
  2763  0770  3006               	movlw	6
  2764  0771                     u485:	
  2765  0771  35AE               	lslf	??_EUSART_Initialize+4,f
  2766  0772  0DAF               	rlf	??_EUSART_Initialize+5,f
  2767  0773  0DB0               	rlf	??_EUSART_Initialize+6,f
  2768  0774  0DB1               	rlf	??_EUSART_Initialize+7,f
  2769  0775  0B89               	decfsz	9,f
  2770  0776  2F71               	goto	u485
  2771  0777  09AE               	comf	??_EUSART_Initialize+4,f
  2772  0778  09AF               	comf	??_EUSART_Initialize+5,f
  2773  0779  09B0               	comf	??_EUSART_Initialize+6,f
  2774  077A  09B1               	comf	??_EUSART_Initialize+7,f
  2775  077B  0AAE               	incf	??_EUSART_Initialize+4,f
  2776  077C  1903               	skipnz
  2777  077D  0AAF               	incf	??_EUSART_Initialize+5,f
  2778  077E  1903               	skipnz
  2779  077F  0AB0               	incf	??_EUSART_Initialize+6,f
  2780  0780  1903               	skipnz
  2781  0781  0AB1               	incf	??_EUSART_Initialize+7,f
  2782  0782  3000               	movlw	0
  2783  0783  072E               	addwf	??_EUSART_Initialize+4,w
  2784  0784  00F4               	movwf	___aldiv@dividend
  2785  0785  3024               	movlw	36
  2786  0786  3D2F               	addwfc	??_EUSART_Initialize+5,w
  2787  0787  00F5               	movwf	___aldiv@dividend+1
  2788  0788  30F4               	movlw	244
  2789  0789  3D30               	addwfc	??_EUSART_Initialize+6,w
  2790  078A  00F6               	movwf	___aldiv@dividend+2
  2791  078B  3000               	movlw	0
  2792  078C  3D31               	addwfc	??_EUSART_Initialize+7,w
  2793  078D  00F7               	movwf	___aldiv@dividend+3
  2794  078E  3186  26CE  3187   	fcall	___aldiv
  2795  0791  0871               	movf	?___aldiv+1,w
  2796  0792  00FA               	movwf	EUSART_Initialize@x+1
  2797  0793  0870               	movf	?___aldiv,w
  2798  0794  00F9               	movwf	EUSART_Initialize@x
  2799                           
  2800                           ;EUSART.c: 8: if(x>255)
  2801  0795  3001               	movlw	1
  2802  0796  027A               	subwf	EUSART_Initialize@x+1,w
  2803  0797  3000               	movlw	0
  2804  0798  1903               	skipnz
  2805  0799  0279               	subwf	EUSART_Initialize@x,w
  2806  079A  1C03               	skipc
  2807  079B  2FE3               	goto	l982
  2808                           
  2809                           ;EUSART.c: 9: {
  2810                           ;EUSART.c: 10: x = (16000000 - baudrate*16)/(baudrate*16);
  2811  079C  0020               	movlb	0	; select bank0
  2812  079D  0826               	movf	EUSART_Initialize@baudrate,w
  2813  079E  00AA               	movwf	??_EUSART_Initialize
  2814  079F  0827               	movf	EUSART_Initialize@baudrate+1,w
  2815  07A0  00AB               	movwf	??_EUSART_Initialize+1
  2816  07A1  0828               	movf	EUSART_Initialize@baudrate+2,w
  2817  07A2  00AC               	movwf	??_EUSART_Initialize+2
  2818  07A3  0829               	movf	EUSART_Initialize@baudrate+3,w
  2819  07A4  00AD               	movwf	??_EUSART_Initialize+3
  2820  07A5  3004               	movlw	4
  2821  07A6                     u505:	
  2822  07A6  35AA               	lslf	??_EUSART_Initialize,f
  2823  07A7  0DAB               	rlf	??_EUSART_Initialize+1,f
  2824  07A8  0DAC               	rlf	??_EUSART_Initialize+2,f
  2825  07A9  0DAD               	rlf	??_EUSART_Initialize+3,f
  2826  07AA  0B89               	decfsz	9,f
  2827  07AB  2FA6               	goto	u505
  2828  07AC  082D               	movf	??_EUSART_Initialize+3,w
  2829  07AD  00F3               	movwf	___aldiv@divisor+3
  2830  07AE  082C               	movf	??_EUSART_Initialize+2,w
  2831  07AF  00F2               	movwf	___aldiv@divisor+2
  2832  07B0  082B               	movf	??_EUSART_Initialize+1,w
  2833  07B1  00F1               	movwf	___aldiv@divisor+1
  2834  07B2  082A               	movf	??_EUSART_Initialize,w
  2835  07B3  00F0               	movwf	___aldiv@divisor
  2836  07B4  0826               	movf	EUSART_Initialize@baudrate,w
  2837  07B5  00AE               	movwf	??_EUSART_Initialize+4
  2838  07B6  0827               	movf	EUSART_Initialize@baudrate+1,w
  2839  07B7  00AF               	movwf	??_EUSART_Initialize+5
  2840  07B8  0828               	movf	EUSART_Initialize@baudrate+2,w
  2841  07B9  00B0               	movwf	??_EUSART_Initialize+6
  2842  07BA  0829               	movf	EUSART_Initialize@baudrate+3,w
  2843  07BB  00B1               	movwf	??_EUSART_Initialize+7
  2844  07BC  3004               	movlw	4
  2845  07BD                     u515:	
  2846  07BD  35AE               	lslf	??_EUSART_Initialize+4,f
  2847  07BE  0DAF               	rlf	??_EUSART_Initialize+5,f
  2848  07BF  0DB0               	rlf	??_EUSART_Initialize+6,f
  2849  07C0  0DB1               	rlf	??_EUSART_Initialize+7,f
  2850  07C1  0B89               	decfsz	9,f
  2851  07C2  2FBD               	goto	u515
  2852  07C3  09AE               	comf	??_EUSART_Initialize+4,f
  2853  07C4  09AF               	comf	??_EUSART_Initialize+5,f
  2854  07C5  09B0               	comf	??_EUSART_Initialize+6,f
  2855  07C6  09B1               	comf	??_EUSART_Initialize+7,f
  2856  07C7  0AAE               	incf	??_EUSART_Initialize+4,f
  2857  07C8  1903               	skipnz
  2858  07C9  0AAF               	incf	??_EUSART_Initialize+5,f
  2859  07CA  1903               	skipnz
  2860  07CB  0AB0               	incf	??_EUSART_Initialize+6,f
  2861  07CC  1903               	skipnz
  2862  07CD  0AB1               	incf	??_EUSART_Initialize+7,f
  2863  07CE  3000               	movlw	0
  2864  07CF  072E               	addwf	??_EUSART_Initialize+4,w
  2865  07D0  00F4               	movwf	___aldiv@dividend
  2866  07D1  3024               	movlw	36
  2867  07D2  3D2F               	addwfc	??_EUSART_Initialize+5,w
  2868  07D3  00F5               	movwf	___aldiv@dividend+1
  2869  07D4  30F4               	movlw	244
  2870  07D5  3D30               	addwfc	??_EUSART_Initialize+6,w
  2871  07D6  00F6               	movwf	___aldiv@dividend+2
  2872  07D7  3000               	movlw	0
  2873  07D8  3D31               	addwfc	??_EUSART_Initialize+7,w
  2874  07D9  00F7               	movwf	___aldiv@dividend+3
  2875  07DA  3186  26CE  3187   	fcall	___aldiv
  2876  07DD  0871               	movf	?___aldiv+1,w
  2877  07DE  00FA               	movwf	EUSART_Initialize@x+1
  2878  07DF  0870               	movf	?___aldiv,w
  2879  07E0  00F9               	movwf	EUSART_Initialize@x
  2880                           
  2881                           ;EUSART.c: 11: BRGH = 1;
  2882  07E1  0023               	movlb	3	; select bank3
  2883  07E2  151E               	bsf	30,2	;volatile
  2884  07E3                     l982:	
  2885                           
  2886                           ;EUSART.c: 12: }
  2887                           ;EUSART.c: 13: if(x<256)
  2888  07E3  3001               	movlw	1
  2889  07E4  027A               	subwf	EUSART_Initialize@x+1,w
  2890  07E5  3000               	movlw	0
  2891  07E6  1903               	skipnz
  2892  07E7  0279               	subwf	EUSART_Initialize@x,w
  2893  07E8  1803               	skipnc
  2894  07E9  0008               	return
  2895                           
  2896                           ;EUSART.c: 14: {
  2897                           ;EUSART.c: 15: SPBRG = x;
  2898  07EA  0879               	movf	EUSART_Initialize@x,w
  2899  07EB  0023               	movlb	3	; select bank3
  2900  07EC  009B               	movwf	27	;volatile
  2901                           
  2902                           ;EUSART.c: 16: SYNC = 0;
  2903  07ED  121E               	bcf	30,4	;volatile
  2904                           
  2905                           ;EUSART.c: 17: SPEN = 1;
  2906  07EE  179D               	bsf	29,7	;volatile
  2907                           
  2908                           ;EUSART.c: 18: TRISC7 = 1;
  2909  07EF  0021               	movlb	1	; select bank1
  2910  07F0  178E               	bsf	14,7	;volatile
  2911                           
  2912                           ;EUSART.c: 19: TRISC6 = 1;
  2913  07F1  170E               	bsf	14,6	;volatile
  2914                           
  2915                           ;EUSART.c: 20: CREN = 1;
  2916  07F2  0023               	movlb	3	; select bank3
  2917  07F3  161D               	bsf	29,4	;volatile
  2918                           
  2919                           ;EUSART.c: 21: TXEN = 1;
  2920  07F4  169E               	bsf	30,5	;volatile
  2921                           
  2922                           ;EUSART.c: 22: return 1;
  2923                           ;	Return value of _EUSART_Initialize is never used
  2924  07F5  0008               	return
  2925  07F6                     __end_of_EUSART_Initialize:	
  2926                           ;EUSART.c: 23: }
  2927                           ;EUSART.c: 24: return 0;
  2928                           ;	Return value of _EUSART_Initialize is never used
  2929                           
  2930                           
  2931                           	psect	text13
  2932  06CE                     __ptext13:	
  2933 ;; *************** function ___aldiv *****************
  2934 ;; Defined at:
  2935 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  divisor         4    0[COMMON] long 
  2938 ;;  dividend        4    4[COMMON] long 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  quotient        4    2[BANK0 ] long 
  2941 ;;  sign            1    1[BANK0 ] unsigned char 
  2942 ;;  counter         1    0[BANK0 ] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  4    0[COMMON] long 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;Total ram usage:       15 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_EUSART_Initialize
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function ___aldiv
  2967  06CE                     ___aldiv:	
  2968                           
  2969                           ;incstack = 0
  2970                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2971  06CE  0020               	movlb	0	; select bank0
  2972  06CF  01A1               	clrf	___aldiv@sign
  2973  06D0  1FF3               	btfss	___aldiv@divisor+3,7
  2974  06D1  2EDF               	goto	l308
  2975  06D2  09F0               	comf	___aldiv@divisor,f
  2976  06D3  09F1               	comf	___aldiv@divisor+1,f
  2977  06D4  09F2               	comf	___aldiv@divisor+2,f
  2978  06D5  09F3               	comf	___aldiv@divisor+3,f
  2979  06D6  0AF0               	incf	___aldiv@divisor,f
  2980  06D7  1903               	skipnz
  2981  06D8  0AF1               	incf	___aldiv@divisor+1,f
  2982  06D9  1903               	skipnz
  2983  06DA  0AF2               	incf	___aldiv@divisor+2,f
  2984  06DB  1903               	skipnz
  2985  06DC  0AF3               	incf	___aldiv@divisor+3,f
  2986  06DD  01A1               	clrf	___aldiv@sign
  2987  06DE  0AA1               	incf	___aldiv@sign,f
  2988  06DF                     l308:	
  2989  06DF  1FF7               	btfss	___aldiv@dividend+3,7
  2990  06E0  2EF0               	goto	l916
  2991  06E1  09F4               	comf	___aldiv@dividend,f
  2992  06E2  09F5               	comf	___aldiv@dividend+1,f
  2993  06E3  09F6               	comf	___aldiv@dividend+2,f
  2994  06E4  09F7               	comf	___aldiv@dividend+3,f
  2995  06E5  0AF4               	incf	___aldiv@dividend,f
  2996  06E6  1903               	skipnz
  2997  06E7  0AF5               	incf	___aldiv@dividend+1,f
  2998  06E8  1903               	skipnz
  2999  06E9  0AF6               	incf	___aldiv@dividend+2,f
  3000  06EA  1903               	skipnz
  3001  06EB  0AF7               	incf	___aldiv@dividend+3,f
  3002  06EC  3001               	movlw	1
  3003  06ED  00F8               	movwf	??___aldiv
  3004  06EE  0878               	movf	??___aldiv,w
  3005  06EF  06A1               	xorwf	___aldiv@sign,f
  3006  06F0                     l916:	
  3007  06F0  3000               	movlw	0
  3008  06F1  00A5               	movwf	___aldiv@quotient+3
  3009  06F2  3000               	movlw	0
  3010  06F3  00A4               	movwf	___aldiv@quotient+2
  3011  06F4  3000               	movlw	0
  3012  06F5  00A3               	movwf	___aldiv@quotient+1
  3013  06F6  3000               	movlw	0
  3014  06F7  00A2               	movwf	___aldiv@quotient
  3015  06F8  0873               	movf	___aldiv@divisor+3,w
  3016  06F9  0472               	iorwf	___aldiv@divisor+2,w
  3017  06FA  0471               	iorwf	___aldiv@divisor+1,w
  3018  06FB  0470               	iorwf	___aldiv@divisor,w
  3019  06FC  1903               	skipnz
  3020  06FD  2F39               	goto	l938
  3021  06FE  01A0               	clrf	___aldiv@counter
  3022  06FF  0AA0               	incf	___aldiv@counter,f
  3023  0700                     l924:	
  3024  0700  1BF3               	btfsc	___aldiv@divisor+3,7
  3025  0701  2F0E               	goto	l926
  3026  0702  3001               	movlw	1
  3027  0703                     u355:	
  3028  0703  35F0               	lslf	___aldiv@divisor,f
  3029  0704  0DF1               	rlf	___aldiv@divisor+1,f
  3030  0705  0DF2               	rlf	___aldiv@divisor+2,f
  3031  0706  0DF3               	rlf	___aldiv@divisor+3,f
  3032  0707  0B89               	decfsz	9,f
  3033  0708  2F03               	goto	u355
  3034  0709  3001               	movlw	1
  3035  070A  00F8               	movwf	??___aldiv
  3036  070B  0878               	movf	??___aldiv,w
  3037  070C  07A0               	addwf	___aldiv@counter,f
  3038  070D  2F00               	goto	l924
  3039  070E                     l926:	
  3040  070E  3001               	movlw	1
  3041  070F                     u375:	
  3042  070F  35A2               	lslf	___aldiv@quotient,f
  3043  0710  0DA3               	rlf	___aldiv@quotient+1,f
  3044  0711  0DA4               	rlf	___aldiv@quotient+2,f
  3045  0712  0DA5               	rlf	___aldiv@quotient+3,f
  3046  0713  0B89               	decfsz	9,f
  3047  0714  2F0F               	goto	u375
  3048  0715  0873               	movf	___aldiv@divisor+3,w
  3049  0716  0277               	subwf	___aldiv@dividend+3,w
  3050  0717  1D03               	skipz
  3051  0718  2F23               	goto	u385
  3052  0719  0872               	movf	___aldiv@divisor+2,w
  3053  071A  0276               	subwf	___aldiv@dividend+2,w
  3054  071B  1D03               	skipz
  3055  071C  2F23               	goto	u385
  3056  071D  0871               	movf	___aldiv@divisor+1,w
  3057  071E  0275               	subwf	___aldiv@dividend+1,w
  3058  071F  1D03               	skipz
  3059  0720  2F23               	goto	u385
  3060  0721  0870               	movf	___aldiv@divisor,w
  3061  0722  0274               	subwf	___aldiv@dividend,w
  3062  0723                     u385:	
  3063  0723  1C03               	skipc
  3064  0724  2F2E               	goto	l934
  3065  0725  0870               	movf	___aldiv@divisor,w
  3066  0726  02F4               	subwf	___aldiv@dividend,f
  3067  0727  0871               	movf	___aldiv@divisor+1,w
  3068  0728  3BF5               	subwfb	___aldiv@dividend+1,f
  3069  0729  0872               	movf	___aldiv@divisor+2,w
  3070  072A  3BF6               	subwfb	___aldiv@dividend+2,f
  3071  072B  0873               	movf	___aldiv@divisor+3,w
  3072  072C  3BF7               	subwfb	___aldiv@dividend+3,f
  3073  072D  1422               	bsf	___aldiv@quotient,0
  3074  072E                     l934:	
  3075  072E  3001               	movlw	1
  3076  072F                     u395:	
  3077  072F  36F3               	lsrf	___aldiv@divisor+3,f
  3078  0730  0CF2               	rrf	___aldiv@divisor+2,f
  3079  0731  0CF1               	rrf	___aldiv@divisor+1,f
  3080  0732  0CF0               	rrf	___aldiv@divisor,f
  3081  0733  0B89               	decfsz	9,f
  3082  0734  2F2F               	goto	u395
  3083  0735  3001               	movlw	1
  3084  0736  02A0               	subwf	___aldiv@counter,f
  3085  0737  1D03               	btfss	3,2
  3086  0738  2F0E               	goto	l926
  3087  0739                     l938:	
  3088  0739  0821               	movf	___aldiv@sign,w
  3089  073A  1903               	btfsc	3,2
  3090  073B  2F47               	goto	l942
  3091  073C  09A2               	comf	___aldiv@quotient,f
  3092  073D  09A3               	comf	___aldiv@quotient+1,f
  3093  073E  09A4               	comf	___aldiv@quotient+2,f
  3094  073F  09A5               	comf	___aldiv@quotient+3,f
  3095  0740  0AA2               	incf	___aldiv@quotient,f
  3096  0741  1903               	skipnz
  3097  0742  0AA3               	incf	___aldiv@quotient+1,f
  3098  0743  1903               	skipnz
  3099  0744  0AA4               	incf	___aldiv@quotient+2,f
  3100  0745  1903               	skipnz
  3101  0746  0AA5               	incf	___aldiv@quotient+3,f
  3102  0747                     l942:	
  3103  0747  0825               	movf	___aldiv@quotient+3,w
  3104  0748  00F3               	movwf	?___aldiv+3
  3105  0749  0824               	movf	___aldiv@quotient+2,w
  3106  074A  00F2               	movwf	?___aldiv+2
  3107  074B  0823               	movf	___aldiv@quotient+1,w
  3108  074C  00F1               	movwf	?___aldiv+1
  3109  074D  0822               	movf	___aldiv@quotient,w
  3110  074E  00F0               	movwf	?___aldiv
  3111  074F  0008               	return
  3112  0750                     __end_of___aldiv:	
  3113  007E                     btemp	set	126	;btemp
  3114  007E                     wtemp	set	126
  3115  007E                     wtemp0	set	126
  3116  0080                     wtemp1	set	128
  3117  0082                     wtemp2	set	130
  3118  0084                     wtemp3	set	132
  3119  0086                     wtemp4	set	134
  3120  0088                     wtemp5	set	136
  3121  007F                     wtemp6	set	127
  3122  007E                     ttemp	set	126
  3123  007E                     ttemp0	set	126
  3124  0081                     ttemp1	set	129
  3125  0084                     ttemp2	set	132
  3126  0087                     ttemp3	set	135
  3127  007F                     ttemp4	set	127
  3128  007E                     ltemp	set	126
  3129  007E                     ltemp0	set	126
  3130  0082                     ltemp1	set	130
  3131  0086                     ltemp2	set	134
  3132  0080                     ltemp3	set	128


Data Sizes:
    Strings     23
    Constant    40
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> Lcd_Write_Integer@buf(COMMON[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), STR_1(CODE[6]), Lcd_Write_Integer@buf(COMMON[8]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _main->_Lcd_Set_Cursor
    _initMain->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_EUSART_Initialize
    _EUSART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1946
                                             11 COMMON     3     3      0
                  _EUSART_Initialize
                       _EUSART_Write
                  _EUSART_Write_Text
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             3     3      0     210
                                              6 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     369
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     398
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Text                                    5     3      2     158
                                              1 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   14    10      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Write
   _EUSART_Write_Text
     _EUSART_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _initMain
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _internal_16

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      23       5       43.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      31      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      31      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Nov 07 15:03:28 2016

               __CFG_CP$OFF 0000                          l60 056B                          l62 0570  
                        l56 0560                          l58 0566                          u55 05B6  
                       l144 0657                         l308 06DF                         l186 052D  
                       l660 0562                         l664 0567                         l924 0700  
                       l916 06F0                         l668 056C                         l942 0747  
                       l934 072E                         l926 070E                         l938 0739  
                       l956 0628                         l972 058E                         l982 07E3  
                       _RD2 007A                         _RD3 007B                         _RD4 007C  
                       _RD5 007D                         _RD6 007E                         _RD7 007F  
                       u505 07A6                         u355 0703                         u515 07BD  
                       u435 0614                         u375 070F                         u455 0634  
                       u607 05C1                         u385 0723                         u617 05CD  
                       u395 072F                         u475 075A                         u627 0552  
                       u547 0661                         u485 0771                         u557 067E  
                       u567 05E6                         u577 0690                         u587 069D  
                       u597 06AA                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_IESO$ON 0000                __CFG_LVP$OFF 0000                        l1006 0574  
                      STR_1 0839                        STR_2 0833                        STR_3 0828  
                      _BRGH 0CF2                        _CREN 0CEC                        _SCS0 04C8  
                      _SCS1 04C9                        _SPEN 0CEF                        _TXEN 0CF5  
                      _SYNC 0CF4                __CFG_WRT$OFF 0000           ?_Lcd_Write_String 0075  
                      _main 0648                        fsr0h 0005                        fsr0l 0004  
                      indf0 0000                        btemp 007E                        ltemp 007E  
                      start 0002                        ttemp 007E          ??_Lcd_Write_String 0077  
                      wtemp 007E             __end_of_Lcd_Cmd 055A               ?_EUSART_Write 0070  
           __end_of___aldiv 0750                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _IRCF0 04CB                       _IRCF1 04CC                       _IRCF2 04CD  
                     _IRCF3 04CE                       _SPBRG 019B     __size_of_Lcd_Set_Cursor 0040  
                     _TRISD 008F              __CFG_FCMEN$OFF 0000             __end_of_dpowers 0828  
            __CFG_BOREN$OFF 0000                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
              ?_internal_16 0070            __end_of_Lcd_Init 06CE            __end_of_Lcd_Port 0572  
            __CFG_MCLRE$OFF 0000             __initialization 07F6                __end_of_main 0688  
            ??_EUSART_Write 0070              __CFG_LPBOR$OFF 0000                      ??_main 007B  
        __size_of_Lcd_Clear 0008              __CFG_PLLEN$OFF 0000              __CFG_ZCDDIS$ON 0000  
                    _ANSELD 018F                      _RC1REG 0199                   ??_Lcd_Cmd 0071  
                    _TX1REG 019A                      _SPLLEN 04CF     __size_of_Lcd_Write_Char 002C  
                    _TRISC6 0476                      _TRISC7 0477              __CFG_PWRTE$OFF 0000  
                 ??___aldiv 0078              __CFG_STVREN$ON 0000            __end_of_initMain 0608  
           Lcd_Set_Cursor@a 0077             Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0079  
           Lcd_Set_Cursor@z 0078     __end_of__initialization 07FD           __end_of_Lcd_Clear 053C  
            __pcstackCOMMON 0070              _Lcd_Set_Cursor 0608                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 0032        __end_of_EUSART_Write 0534  
                __pmaintext 0648        __size_of_internal_16 0009             __CFG_PPS1WAY$ON 0000  
 __size_of_Lcd_Write_String 001A      __end_of_Lcd_Set_Cursor 0648                  ??_Lcd_Init 0074  
                   _PPSLOCK 0E0F                  ??_Lcd_Port 0070                   ?_initMain 0070  
            _Lcd_Write_Char 05A6                     _Lcd_Cmd 0545                     ___aldiv 06CE  
           ?_Lcd_Set_Cursor 0074                     __ptext1 05D2                     __ptext2 053C  
                   __ptext3 0688                     __ptext4 0534                     __ptext5 058C  
                   __ptext6 05A6                     __ptext7 0608                     __ptext8 0545  
                   __ptext9 055A                     _dpowers 0800            ___aldiv@dividend 0074  
                   clrloop0 0527      __end_of_Lcd_Write_Char 05D2        end_of_initialization 07FD  
                   ftoa@buf 0032                  ??_initMain 0076           _EUSART_Initialize 0750  
        ?_EUSART_Initialize 0026            ___aldiv@quotient 0022                   Lcd_Port@a 0070  
              __pstringtext 0800          EUSART_Initialize@x 0079         ??_EUSART_Initialize 002A  
          __CFG_FOSC$INTOSC 0000                   _TRISBbits 008D                   _TRISDbits 008F  
     __size_of_EUSART_Write 0008             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0075  
         Lcd_Write_String@i 0078                   _RXPPSbits 0E24   __end_of_EUSART_Initialize 07F6  
                 _Lcd_Clear 0534            _Lcd_Write_String 058C                _EUSART_Write 052C  
       start_initialization 07F6           __size_of_Lcd_Init 0046           __size_of_Lcd_Port 0018  
         _EUSART_Write_Text 0572          ?_EUSART_Write_Text 0071                  ?_Lcd_Clear 0070  
       ??_EUSART_Write_Text 0073             Lcd_Write_Char@a 0074             Lcd_Write_Char@y 0073  
                 ___latbits 0002               __pcstackBANK0 0020   __end_of_EUSART_Write_Text 058C  
__size_of_EUSART_Initialize 00A6                    ?_Lcd_Cmd 0070               ??_internal_16 0070  
         __size_of_initMain 0036            ??_Lcd_Set_Cursor 0075                    ?___aldiv 0070  
 EUSART_Initialize@baudrate 0026             ___aldiv@divisor 0070             ___aldiv@counter 0020  
                  _LATDbits 010F                   clear_ram0 0526                    Lcd_Cmd@a 0073  
                  _PIR1bits 0011                 ??_Lcd_Clear 0074         __end_of_internal_16 0545  
          ??_Lcd_Write_Char 0071                    _Lcd_Init 0688                    _Lcd_Port 055A  
__size_of_EUSART_Write_Text 001A    __end_of_Lcd_Write_String 05A6            __size_of_Lcd_Cmd 0015  
          __size_of___aldiv 0082                  _ANSELBbits 018D                    __ptext10 0572  
                  __ptext11 052C                    __ptext12 0750                    __ptext13 06CE  
                  _initMain 05D2               __size_of_main 0040                 _internal_16 053C  
                _RB2PPSbits 0E9A                  _RC1STAbits 019D          Lcd_Write_Char@temp 0072  
         __CFG_CLKOUTEN$OFF 0000                 _PPSLOCKbits 0E0F          Lcd_Set_Cursor@temp 007A  
     EUSART_Write_Text@text 0071                ___aldiv@sign 0021          EUSART_Write@txData 0070  
        EUSART_Write_Text@i 0074  
